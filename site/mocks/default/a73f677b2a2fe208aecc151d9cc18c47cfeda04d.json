{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/uilayer/viewmodels/BaseSignalsViewModel.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\"viewmodels/BaseSignalsViewModel\", [\r\n\t\"require\",\r\n\t\"knockout\",\r\n\t\"handlers/general\",\r\n\t\"helpers/ObservableHashTable\",\r\n\t\"Dictionary\",\r\n\t\"helpers/KoComponentViewModel\",\r\n\t\"dataaccess/dalTradingSignals\",\r\n\t\"initdatamanagers/Customer\",\r\n\t\"initdatamanagers/InstrumentsManager\",\r\n\t\"devicemanagers/AlertsManager\",\r\n\t\"handlers/Cookie\",\r\n\t\"JSONHelper\",\r\n\t\"managers/instrumentTranslationsManager\",\r\n\t\"modules/permissionsmodule\",\r\n\t\"managers/viewsmanager\",\r\n\t\"global/UrlResolver\",\r\n\t\"generalmanagers/RegistrationManager\",\r\n\t\"modules/ThemeSettings\",\r\n\t\"customEnums/Consts\",\r\n], function (require) {\r\n\tvar ko = require(\"knockout\"),\r\n\t\tgeneral = require(\"handlers/general\"),\r\n\t\tDictionary = require(\"Dictionary\"),\r\n\t\tKoComponentViewModel = require(\"helpers/KoComponentViewModel\"),\r\n\t\tdalTradingSignals = require(\"dataaccess/dalTradingSignals\"),\r\n\t\tcustomer = require(\"initdatamanagers/Customer\"),\r\n\t\tinstrumentsManager = require(\"initdatamanagers/InstrumentsManager\"),\r\n\t\tAlertsManager = require(\"devicemanagers/AlertsManager\"),\r\n\t\tcookieHandler = require(\"handlers/Cookie\"),\r\n\t\tJSONHelper = require(\"JSONHelper\"),\r\n\t\tinstrumentTranslationsManager = require(\"managers/instrumentTranslationsManager\"),\r\n\t\tpermissionsModule = require(\"modules/permissionsmodule\"),\r\n\t\tViewsManager = require(\"managers/viewsmanager\"),\r\n\t\tUrlResolver = require(\"global/UrlResolver\"),\r\n\t\tobservableHashTable = require(\"helpers/ObservableHashTable\"),\r\n\t\tRegistrationManager = require(\"generalmanagers/RegistrationManager\"),\r\n\t\tthemeSetting = require(\"modules/ThemeSettings\"),\r\n\t\tIMAGE_EXTENSION = \".gif\",\r\n\t\tIMAGE_DARK_SUFFIX = \".darktheme\",\r\n\t\trx = RegExp(IMAGE_EXTENSION);\r\n\r\n\tvar BaseSignalsViewModel = general.extendClass(KoComponentViewModel, function (_filterData) {\r\n\t\tvar self = this,\r\n\t\t\tfilterData = _filterData,\r\n\t\t\tparent = this.parent, // inherited from KoComponentViewModel\r\n\t\t\tdata = this.Data, // inherited from KoComponentViewModel\r\n\t\t\thandlers = {};\r\n\r\n\t\tfunction init(settings) {\r\n\t\t\tparent.init.call(self, settings); // inherited from KoComponentViewModel\r\n\r\n\t\t\tsetObservables();\r\n\t\t\tsetHandlers();\r\n\t\t\tsetSubscribers();\r\n\t\t\tsetComputables();\r\n\r\n\t\t\tupdateDisclaimerStatus();\r\n\t\t\tupdateSignalsPermissions();\r\n\t\t}\r\n\r\n\t\tfunction setObservables() {\r\n\t\t\tdata.hasAgreedDisclaimer = ko.observable(false);\r\n\t\t\tdata.signalsAreAvailable = ko.observable(false);\r\n\t\t\tdata.isLoading = ko.observable(false);\r\n\t\t\tdata.fetchingData = ko.observable(false);\r\n\t\t\tdata.signalsList = new observableHashTable(ko, general, \"signalId\", {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tsortProperty: \"signalId\",\r\n\t\t\t\tasc: false,\r\n\t\t\t});\r\n\t\t\tdata.signalsEndDate = ko.observable(\"\");\r\n\t\t\tdata.areSignalsAllowed = ko.observable(false);\r\n\t\t\tdata.pageIndex = ko.observable(1);\r\n\t\t\tdata.totalRecords = ko.observable(0);\r\n\t\t\tdata.signalsPermissionsLoaded = ko.observable(false);\r\n\t\t}\r\n\r\n\t\tfunction setSubscribers() {\r\n\t\t\tself.subscribeTo(data.areSignalsAllowed, function (areSignalsAllowed) {\r\n\t\t\t\tif (areSignalsAllowed) {\r\n\t\t\t\t\tupdateSignalsList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tself.subscribeTo(data.isLoading, function (isLoading) {\r\n\t\t\t\tko.postbox.publish(ePostboxTopic.SetSpinnerVisibility, isLoading);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction setComputables() {\r\n\t\t\tdata.isShowAgreement = self.createComputed(function () {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tdata.signalsPermissionsLoaded() &&\r\n\t\t\t\t\t!this.hasAgreedDisclaimer() &&\r\n\t\t\t\t\tthis.areSignalsAllowed() &&\r\n\t\t\t\t\t!this.isLoading()\r\n\t\t\t\t);\r\n\t\t\t}, self.Data);\r\n\r\n\t\t\tdata.isShowSignal = self.createComputed(function () {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tdata.signalsPermissionsLoaded() &&\r\n\t\t\t\t\tthis.hasAgreedDisclaimer() &&\r\n\t\t\t\t\tthis.signalsAreAvailable() &&\r\n\t\t\t\t\tthis.areSignalsAllowed() &&\r\n\t\t\t\t\t!this.isLoading()\r\n\t\t\t\t);\r\n\t\t\t}, self.Data);\r\n\r\n\t\t\tdata.isShowSignalUnavailable = self.createComputed(function () {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tdata.signalsPermissionsLoaded() &&\r\n\t\t\t\t\tthis.hasAgreedDisclaimer() &&\r\n\t\t\t\t\t!this.signalsAreAvailable() &&\r\n\t\t\t\t\tthis.areSignalsAllowed() &&\r\n\t\t\t\t\t!(this.isLoading() || this.fetchingData())\r\n\t\t\t\t);\r\n\t\t\t}, self.Data);\r\n\r\n\t\t\tdata.signalsAreDissallowed = self.createComputed(function () {\r\n\t\t\t\treturn data.signalsPermissionsLoaded() && !this.areSignalsAllowed() && !this.isLoading();\r\n\t\t\t}, self.Data);\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tparent.dispose.call(self); // inherited from KoComponentViewModel\r\n\t\t\tdata.signalsList.Clear();\r\n\t\t}\r\n\r\n\t\tfunction updateSignalsList() {\r\n\t\t\tif (!data.isLoading() && data.hasAgreedDisclaimer() && !(filterData.instrumentId || filterData.signalId)) {\r\n\t\t\t\tvar result;\r\n\t\t\t\tdata.fetchingData(data.pageIndex() !== 1);\r\n\t\t\t\tdata.isLoading(data.pageIndex() == 1);\r\n\r\n\t\t\t\tdalTradingSignals\r\n\t\t\t\t\t.getSignalsDetailsForTechAnalysis({ symbol: null, pageIndex: data.pageIndex() })\r\n\t\t\t\t\t.then(function (responseText) {\r\n\t\t\t\t\t\tresult = JSONHelper.STR2JSON(\"getSignalsDetailsForTechAnalysis/onLoadComplete\", responseText);\r\n\t\t\t\t\t\tif (general.isObjectType(result)) {\r\n\t\t\t\t\t\t\tdata.totalRecords(Number(result.totalRecords));\r\n\t\t\t\t\t\t\tupdateSignalData(result, data.pageIndex() > 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateSignalData(result, paged) {\r\n\t\t\tvar instrumentsToRegister = [];\r\n\t\t\tif (result.status == eResult.Success && result.resultStatus == 0) {\r\n\t\t\t\tfor (var i = 0; i < result.result.length; i++) {\r\n\t\t\t\t\tvar signal = toSignalObject(result.result[i]);\r\n\t\t\t\t\tif (signal) {\r\n\t\t\t\t\t\tdata.signalsList.Add(signal);\r\n\t\t\t\t\t\tinstrumentsToRegister.push(signal.instrument.id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tErrorManager.onError(\"viewModels/BaseSignalsViewModel\", result.result[i], eErrorSeverity.low);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdata.signalsAreAvailable((result.status == eResult.Success && result.resultStatus == 0) || paged);\r\n\r\n\t\t\tdata.fetchingData(false);\r\n\t\t\tdata.isLoading(false);\r\n\t\t\tif (instrumentsToRegister.length) {\r\n\t\t\t\tregisterInstruments(instrumentsToRegister);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction registerInstruments(instrumentIds) {\r\n\t\t\tRegistrationManager.Update(eRegistrationListName.TradingSignals, instrumentIds);\r\n\t\t}\r\n\r\n\t\tfunction setHandlers() {\r\n\t\t\thandlers.disclaimerClick = function () {\r\n\t\t\t\tAlertsManager.UpdateAlert(\r\n\t\t\t\t\tAlertTypes.ServerResponseAlert,\r\n\t\t\t\t\tDictionary.GetItem(\"DisclaimerTitle\"),\r\n\t\t\t\t\tDictionary.GetItem(\"lblDisclaimerText\"),\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t{}\r\n\t\t\t\t);\r\n\t\t\t\tAlertsManager.PopAlert(AlertTypes.ServerResponseAlert);\r\n\t\t\t};\r\n\r\n\t\t\thandlers.clickDisclaimerAgree = function () {\r\n\t\t\t\tcookieHandler.CreateCookie(\"TsComplianceDate\", new Date().toDateString(), new Date().AddMonths(12));\r\n\t\t\t\tdata.hasAgreedDisclaimer(true);\r\n\t\t\t\tupdateSignalsList();\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction toSignalObject(_signal) {\r\n\t\t\tvar instrument = instrumentsManager.GetInstrumentBySignalName(_signal[eTradingSignal.symbol]),\r\n\t\t\t\t__signal = null;\r\n\r\n\t\t\tif (instrument) {\r\n\t\t\t\tvar currentUiTheme = themeSetting.GetTheme(),\r\n\t\t\t\t\t_imagePath = _signal[eTradingSignal.imagePath];\r\n\r\n\t\t\t\tif (currentUiTheme === \"dark\") {\r\n\t\t\t\t\t_imagePath = _imagePath.replace(rx, IMAGE_DARK_SUFFIX + IMAGE_EXTENSION);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t__signal = {\r\n\t\t\t\t\tsignalId: _signal[eTradingSignal.signalId],\r\n\t\t\t\t\tsignalTitle: _signal[eTradingSignal.signalTitle],\r\n\t\t\t\t\tsignalDate: _signal[eTradingSignal.signalDate],\r\n\t\t\t\t\timagePath: _imagePath,\r\n\t\t\t\t\tshortTermLevel: _signal[eTradingSignal.shortTerm],\r\n\t\t\t\t\tshortTermText: getAdviceText(_signal[eTradingSignal.shortTerm], true),\r\n\t\t\t\t\tmediumTermLevel: _signal[eTradingSignal.mediumTermLevel],\r\n\t\t\t\t\tmediumTermText: getAdviceText(_signal[eTradingSignal.mediumTermLevel], false),\r\n\t\t\t\t\tweekDelta: _signal[eTradingSignal.weekDelta],\r\n\t\t\t\t\tlongTermLevel: _signal[eTradingSignal.longTermLevel],\r\n\t\t\t\t\tlongTermText: getAdviceText(_signal[eTradingSignal.longTermLevel], false),\r\n\t\t\t\t\tmonthDelta: _signal[eTradingSignal.monthDelta],\r\n\t\t\t\t\tsummary: _signal[eTradingSignal.summary],\r\n\t\t\t\t\tinstrument: instrument,\r\n\t\t\t\t\tsymbol: instrument\r\n\t\t\t\t\t\t? instrumentTranslationsManager.Long(instrument.id)\r\n\t\t\t\t\t\t: _signal[eTradingSignal.symbol],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn __signal;\r\n\t\t}\r\n\r\n\t\tfunction getAdviceText(signalLevel, isShortTerm) {\r\n\t\t\tvar textKey;\r\n\r\n\t\t\tswitch (signalLevel) {\r\n\t\t\t\tcase eSignalTrendsValues.StrongBuy:\r\n\t\t\t\t\ttextKey = \"lblStrongBuy\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase eSignalTrendsValues.Buy:\r\n\t\t\t\t\ttextKey = \"lblBuy\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase eSignalTrendsValues.Sell:\r\n\t\t\t\t\ttextKey = \"lblSell\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase eSignalTrendsValues.StrongSell:\r\n\t\t\t\t\ttextKey = \"lblStrongSell\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (isShortTerm) textKey = \"lblNotAvailable\";\r\n\t\t\t\t\telse textKey = \"lblNeutral\";\r\n\t\t\t}\r\n\r\n\t\t\treturn textKey;\r\n\t\t}\r\n\r\n\t\tfunction openDeal(signal) {\r\n\t\t\tif (signal && signal.instrument) {\r\n\t\t\t\tViewsManager.RedirectToURL(\r\n\t\t\t\t\tUrlResolver.getRedirectUrl(\"NewDeal\", \"instrumentId=\" + signal.instrument.id)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tViewsManager.SwitchViewVisible(eForms.Quotes, {});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar updateDisclaimerStatus = function () {\r\n\t\t\tvar tsComplianceDate = cookieHandler.ReadCookie(\"TsComplianceDate\");\r\n\t\t\tdata.hasAgreedDisclaimer(tsComplianceDate !== null);\r\n\t\t};\r\n\r\n\t\tvar updateSignalsPermissions = function () {\r\n\t\t\tcustomer.SignalsPermissionsReady.then(function () {\r\n\t\t\t\tdata.areSignalsAllowed(customer.prop.AreSignalsAllowed);\r\n\t\t\t\tdata.signalsEndDate(customer.prop.signalsEndDate);\r\n\t\t\t\tdata.signalsPermissionsLoaded(true);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tdispose: dispose,\r\n\t\t\tHandlers: handlers,\r\n\t\t\tFilterData: filterData,\r\n\t\t\ttoSignalObject: toSignalObject,\r\n\t\t\tregisterInstruments: registerInstruments,\r\n\t\t\topenDeal: openDeal,\r\n\t\t\tupdateSignalsList: updateSignalsList,\r\n\t\t\tpermissionsModule: permissionsModule,\r\n\t\t};\r\n\t});\r\n\r\n\treturn BaseSignalsViewModel;\r\n});\r\n",
  "isBase64": false
}