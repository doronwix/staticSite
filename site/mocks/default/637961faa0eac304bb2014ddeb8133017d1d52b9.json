{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/devices/web/uilayer/viewmodels/Withdrawal/Wizard/WithdrawalSetAmountViewModel.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'deviceviewmodels/Withdrawal/Wizard/WithdrawalSetAmountViewModel',\r\n    [\r\n        'require',\r\n        'handlers/general',\r\n        'Dictionary',\r\n        'viewmodels/dialogs/DialogViewModel',\r\n        'viewmodels/Withdrawal/Wizard/BaseWithdrawalSetAmountViewModel'\r\n    ],\r\n    function WithdrawalSetAmountDef(require) {\r\n        var general = require('handlers/general'),\r\n            Dictionary = require('Dictionary'),\r\n            DialogViewModel = require('viewmodels/dialogs/DialogViewModel'),\r\n            BaseWithdrawalSetAmountViewModel = require('viewmodels/Withdrawal/Wizard/BaseWithdrawalSetAmountViewModel');\r\n\r\n        var WithdrawalSetAmountViewModel = general.extendClass(BaseWithdrawalSetAmountViewModel, function WithdrawalSetAmountClass() {\r\n            var self = this,\r\n                parent = this.parent,\r\n                data = this.Data;\r\n\r\n            function init() {\r\n                parent.init.call(self);\r\n                setDcHandlers();\r\n            }\r\n\r\n            function setDcHandlers() {\r\n                Object.assign(parent.DcHandlers, {\r\n                    dcShowAlert: showDepositConfirmation,\r\n                    dcUploadSuccess: dcUploadSuccess\r\n                });\r\n            }\r\n\r\n            function showDepositConfirmation() {\r\n                var options = {\r\n                        title: Dictionary.GetItem('lblDepositConfirmationTitle'),\r\n                        width: 695,\r\n                        height: 850,\r\n                        dialogClass: 'fx-dialog deposit-confirmation-dialog',\r\n                        modal: true,\r\n                        draggable: true,\r\n                        resizable: false,\r\n                        left: (window.innerWidth - 695) / 2,\r\n                        top: 146,\r\n                        offset: 695,\r\n                        useDialogPosition: true,\r\n                        preventClose: {\r\n                            canClose: false,\r\n                            actionOnPrevent: preventCloseDc\r\n                        }\r\n                    },\r\n                    args = {\r\n                        uploadStringImage: data.uploadVm.UploadStringImage,\r\n                        withdrawalFlow: true\r\n                    };\r\n\r\n                DialogViewModel.openAsync(eAppEvents.depositConfirmationLoadedEvent,\r\n                    eDialog.DepositConfirmation,\r\n                    options,\r\n                    eViewTypes.vDepositConfirmation,\r\n                    args);\r\n            }\r\n\r\n            function preventCloseDc() {\r\n                var props = {\r\n                    overwriteNavFlow: true,\r\n                    okButtonCallback: forceCloseDc,\r\n                    okButtonCaption: Dictionary.GetItem(\"ok\"),\r\n                    cancelButtonCaption: Dictionary.GetItem(\"cancel\"),\r\n                    btnOkClass: 'small-okBtn',\r\n                    btnCancelClass: 'small-cancelBtn'\r\n                };\r\n\r\n                AlertsManager.UpdateAlert(AlertTypes.GeneralOkCancelAlert, Dictionary.GetItem('titleAlertImportant', 'dialogsTitles', ' '), null, [Dictionary.GetItem('msg_requiredStep', 'withdrawal_withdrawalrequest')], props);\r\n                AlertsManager.PopAlert(AlertTypes.GeneralOkCancelAlert);\r\n            }\r\n\r\n            function forceCloseDc() {\r\n                var currentDialog = DialogViewModel.dialogs().find(function (dialog) {\r\n                    return dialog.name === eDialog.DepositConfirmation;\r\n                });\r\n\r\n                currentDialog.options.preventClose.canClose = true;\r\n                DialogViewModel.close(eDialog.DepositConfirmation);\r\n            }\r\n\r\n            function dcUploadSuccess() {\r\n                data.dcRequired = false;\r\n                parent.UpdateNextStep();\r\n                DialogViewModel.close(eDialog.DepositConfirmation);\r\n            }\r\n\r\n            return {\r\n                init: init,\r\n                WithdrawalInfo: data.withdrawalInfo,\r\n                Data: data\r\n            };\r\n        });\r\n\r\n        var createViewModel = function (params) {\r\n            params = params || {};\r\n\r\n            Object.assign(params, {\r\n                dcUploadMessages: {\r\n                    fail: Dictionary.GetItem('msg_dcUploadError', 'withdrawal_withdrawalrequest'),\r\n                    additionalSuccess: Dictionary.GetItem('msg_dcUploadSuccess', 'withdrawal_withdrawalrequest')\r\n                }\r\n            });\r\n\r\n            var viewModel = new WithdrawalSetAmountViewModel(params);\r\n            viewModel.init();\r\n\r\n            return viewModel;\r\n        };\r\n\r\n        return {\r\n            viewModel: {\r\n                createViewModel: createViewModel\r\n            }\r\n        };\r\n    }\r\n);\r\n",
  "isBase64": false
}