{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/uilayer/viewmodels/LowMarginSpinnerViewModel.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'viewmodels/LowMarginSpinnerViewModel',\r\n    [\r\n        'require',\r\n        'knockout'\r\n    ],\r\n    function (require) {\r\n        var ko = require('knockout');\r\n\r\n        function LowMarginSpinnerViewModel(params) {\r\n            var valueSubscriber,\r\n                optionsSubscriber,\r\n                isValidSubscriber;\r\n\r\n            var step = ko.observable(1),\r\n                minValue = ko.observable(),\r\n                maxValue = ko.observable(),\r\n                showAmountTooltip = ko.observable(false),\r\n                isSelectedAmountValid = ko.observable(true),\r\n                enabled = ko.observable(true);\r\n\r\n            function extendObservables() {\r\n                params.value.extend({\r\n                    toNumericLength: {\r\n                        ranges: [\r\n                            { from: 0, to: 10, decimalDigits: 2 },\r\n                            { from: 10, to: Number.MAX_SAFE_INTEGER, decimalDigits: 0 }\r\n                        ]\r\n                    }\r\n                });\r\n\r\n                params.value.extend({\r\n                    incremental: {\r\n                        ranges: [\r\n                            { from: 0, to: 10, step: 0.25 }\r\n                        ]\r\n                    }\r\n                });\r\n                step(params.step);\r\n\r\n                if (ko.isObservable(params.enabled))\r\n                    enabled = params.enabled;\r\n\r\n                if (ko.isObservable(params.amountValidSubscriber))\r\n                    isSelectedAmountValid = params.amountValidSubscriber;\r\n            }\r\n\r\n            function buildValidation(minMaxValues) {\r\n                minMaxValues = minMaxValues || [];\r\n\r\n                minValue(minMaxValues[0] || 0);\r\n                maxValue(minMaxValues[1] || 10000000000);\r\n            }\r\n\r\n            function setSubscribers() {\r\n                optionsSubscriber = params.options.subscribe(function () {\r\n                    buildValidation(this._target());\r\n                }, null, 'arrayChange');\r\n\r\n                valueSubscriber = params.value.subscribe(function () {\r\n                    showAmountTooltip(false);\r\n                });\r\n\r\n                isValidSubscriber = params.value.isValid.subscribe(function (isValid) {\r\n                    isSelectedAmountValid(isValid);\r\n                });\r\n            }\r\n\r\n            function dispose() {\r\n                valueSubscriber.dispose();\r\n                isValidSubscriber.dispose();\r\n\r\n                params.value.extend({ toDealAmount: false });\r\n                params.value.extend({ incremental: false });\r\n\r\n                optionsSubscriber.dispose();\r\n            }\r\n\r\n            extendObservables();\r\n            buildValidation(ko.utils.unwrapObservable(params.options));\r\n            setSubscribers();\r\n\r\n            return {\r\n                id: params.id,\r\n                name: params.name,\r\n                value: params.value,\r\n                isSelectedAmountValid: isSelectedAmountValid,\r\n                min: minValue,\r\n                max: maxValue,\r\n                step: step,\r\n                dispose: dispose,\r\n                enabled: enabled\r\n            };\r\n        }\r\n\r\n        return LowMarginSpinnerViewModel;\r\n    }\r\n);",
  "isBase64": false
}