{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/uilayer/viewmodels/PersonalDetailsViewModel.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "define(\r\n    'viewmodels/PersonalDetailsViewModel',\r\n    [\r\n        'require',\r\n        'knockout',\r\n        'handlers/general',\r\n        'initdatamanagers/Customer',\r\n        'devicemanagers/ViewModelsManager',\r\n        'devicemanagers/StatesManager',\r\n        'StateObject!Setting'\r\n    ],\r\n    function (require) {\r\n        var ko = require('knockout'),\r\n            general = require('handlers/general'),\r\n            customer = require('initdatamanagers/Customer'),\r\n            viewModelsManager = require('devicemanagers/ViewModelsManager'),\r\n            settingStateObject = require('StateObject!Setting'),\r\n            statesManager = require('devicemanagers/StatesManager');\r\n\r\n        function personalDetailsViewModel() {\r\n            var isCollapsed = ko.observable(true),\r\n                settingStateObjectUnsubscribe;\r\n\r\n            var viewModel = {\r\n                brokerID: ko.observable(''),\r\n                contactFirstName: ko.observable(''),\r\n                contactLastName: ko.observable(''),\r\n                contactFullName: ko.observable(''),\r\n                contactInitials: ko.observable(''),\r\n                contactUserName: ko.observable(''),\r\n                phone: ko.observable(''),\r\n                mobile: ko.observable(''),\r\n                country: ko.observable(''),\r\n                expiryDate: ko.observable(''),\r\n                isCDDRestricted: ko.observable(false),\r\n                updateInfoVisible: statesManager.States.IsCddOrKycRequired,\r\n                generalStatusColor: ko.observable(''),\r\n                generalStatusName: ko.observable(''),\r\n                generalStatusIcon: ko.observable(''),\r\n                generalStatusClick: generalStatusClick,\r\n                showCta: false\r\n            };\r\n\r\n            function init() {\r\n                setObservables();\r\n                setSubscribers();\r\n                setComputables();\r\n\r\n                if (!settingStateObject.get('AccountHubSetting')) {\r\n                    settingStateObject.set('AccountHubSetting', null);\r\n                }\r\n\r\n                settingStateObjectUnsubscribe = settingStateObject.subscribe('AccountHubSetting', function (view) {\r\n                    isCollapsed(view !== eViewTypes.vPersonalDetails);\r\n                });\r\n\r\n                isOpenCollapsed();\r\n\r\n                customer\r\n                    .GetCustomerDetails()\r\n                    .then(function (response) {\r\n                        var serverModel = JSONHelper.STR2JSON('PersonalDetailsViewModel:GetCustomerDetails', response);\r\n\r\n                        viewModel.contactFirstName(checkUserNamesNotNull(serverModel.contactFirst));\r\n                        viewModel.contactLastName(checkUserNamesNotNull(serverModel.contactLast));\r\n                        viewModel.brokerID(serverModel.brokerID);\r\n                        viewModel.contactFullName(viewModel.contactFirstName() + ' ' + viewModel.contactLastName());\r\n                        viewModel.phone(serverModel.phone);\r\n                        viewModel.mobile(serverModel.mobile);\r\n                        viewModel.country('cntr_' + customer.prop.countryID);\r\n                        viewModel.expiryDate(serverModel.expiryDate);\r\n                        viewModel.contactInitials(viewModel.contactFirstName().charAt(0) + viewModel.contactLastName().charAt(0));\r\n                        viewModel.contactUserName(customer.prop.userName);\r\n                    })\r\n                    .done();\r\n            }\r\n\r\n            function setObservables() {\r\n                viewModel.isCDDRestricted(statesManager.States.IsCDDRestricted());\r\n            }\r\n\r\n            function setSubscribers() {\r\n                statesManager.States.IsCDDRestricted.subscribe(function (newValue) {\r\n                    viewModel.isCDDRestricted(newValue);\r\n                });\r\n            }\r\n\r\n            function setComputables() {\r\n                viewModel.hasFullName = ko.computed(function () {\r\n                    return !general.isNullOrUndefined(viewModel.contactFullName()) && viewModel.contactFullName().length > 1;\r\n                });\r\n\r\n                viewModel.hasPhone = ko.computed(function () {\r\n                    return !general.isNullOrUndefined(viewModel.phone()) && viewModel.phone().length > 4;\r\n                });\r\n\r\n                viewModel.hasMobile = ko.computed(function () {\r\n                    return !general.isNullOrUndefined(viewModel.mobile()) && viewModel.mobile().length > 4;\r\n                });\r\n            }\r\n\r\n            function checkUserNamesNotNull(name) {\r\n                if (general.isNullOrUndefined(name)) {\r\n                    return '';\r\n                }\r\n\r\n                else return name;\r\n            }\r\n\r\n            function isOpenCollapsed() {\r\n                if (viewModelsManager.VManager.GetViewArgs(eViewTypes.vPersonalDetails) === eViewTypes.vPersonalDetails) {\r\n                    isCollapsed(false);\r\n                }\r\n            }\r\n\r\n            function collapsedToggle() {\r\n                isCollapsed(!isCollapsed());\r\n            }\r\n\r\n            function goToUploaddocuments() {\r\n                viewModelsManager.VManager.RedirectToForm(eForms.UploadDocuments);\r\n            }\r\n\r\n            function goToClientQuestionnaire() {\r\n                viewModelsManager.VManager.RedirectToForm(eForms.ClientQuestionnaire);\r\n            }\r\n\r\n            function generalStatusClick() {\r\n                ko.postbox.publish('action-source', 'StatusRow');\r\n                viewModelsManager.VManager.SwitchViewVisible(eForms.UserFlowMap);\r\n            }\r\n\r\n            function dispose() {\r\n                if (settingStateObjectUnsubscribe) {\r\n                    settingStateObjectUnsubscribe();\r\n                }\r\n            }\r\n\r\n            return {\r\n                viewModel: viewModel,\r\n                isOpenCollapsed: isOpenCollapsed,\r\n                collapsedToggle: collapsedToggle,\r\n                isCollapsed: isCollapsed,\r\n                init: init,\r\n                dispose: dispose,\r\n                goToUploaddocuments: goToUploaddocuments,\r\n                goToClientQuestionnaire: goToClientQuestionnaire\r\n            }\r\n        }\r\n\r\n        var createViewModel = function () {\r\n            var viewModel = new personalDetailsViewModel();\r\n            viewModel.init();\r\n            return viewModel;\r\n        };\r\n\r\n        return {\r\n            viewModel: {\r\n                createViewModel: createViewModel\r\n            }\r\n        };\r\n    }\r\n);\r\n",
  "isBase64": false
}