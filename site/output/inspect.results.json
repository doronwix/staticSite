[{"id":"dda86b5ae6bc1d2b91be4002eb35390470ba996c","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/AdvinionChart/AdvinionChartInitilizer.js","lines":[43,57],"code":"priceLines[eChartPriceLineType.LimitLevel] = {\r\n    panelId: \"price\",\r\n    lineColor: 'rgba(150,150,150,1)',\r\n    lineWidth: horizontalLineWidth,\r\n    dashStyle: horizontalLineDashStyle,\r\n    labelColor: 'rgba(150,150,150,1)',\r\n    labelfont: horizontalLineLabelFont,\r\n    labelAlignment: horizontalLineLabelAlignment,\r\n    horizontalPadding: horizontalLineLabelLeftPadding,\r\n    margin: horizontalLineMargin,\r\n    inPriceRange: false,\r\n    labelBackgroundColor: horizontalLineLabelBackground,\r\n    boxColor: 'rgba(150,150,150,1)',\r\n    boxTextColor: colors.white\r\n};\r"},{"path":"../Scripts/FxNet/UILayer/Managers/AdvinionChart/AdvinionChartInitilizer.js","lines":[91,105],"code":"priceLines[eChartPriceLineType.OpenRate] = {\r\n    panelId: \"price\",\r\n    lineColor: 'rgba(150,150,150,1)',\r\n    lineWidth: horizontalLineWidth,\r\n    dashStyle: horizontalLineDashStyle,\r\n    labelColor: 'rgba(150,150,150,1)',\r\n    labelfont: horizontalLineLabelFont,\r\n    labelAlignment: horizontalLineLabelAlignment,\r\n    horizontalPadding: horizontalLineLabelLeftPadding,\r\n    margin: horizontalLineMargin,\r\n    inPriceRange: false,\r\n    labelBackgroundColor: horizontalLineLabelBackground,\r\n    boxColor: 'rgba(150,150,150,1)',\r\n    boxTextColor: colors.white\r\n};\r"}]},
{"id":"6555149000c9f5c2e26efe8fed470d7625dacc1c","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/AdvinionChart/AdvinionChartInitilizer.js","lines":[149,175],"code":"SelectedInstrument: startArgs.instrumentId,\r\nOrderDirection: startArgs.orderDir,\r\nchart: {\r\n    DefaultTimeScale: '1M',\r\n    ShowBarData: 'true',\r\n    PriceChartType: 'candlesticks',\r\n    WaterMark: false,\r\n    TimeZone: 0,\r\n    ExtraData: '5M',\r\n    LineLastCloseMarkRadius: 0,\r\n    AlignToLeft: false,\r\n    MaximumBars: 500,\r\n    HistoryCandlesCount: 500,\r\n    NumberOfVisibleBars: 100\r\n},\r\nactions: {\r\n    showMajors: true,\r\n    showCompares: true,\r\n    setLastUpdateEvent: false,\r\n    enableShowUserPosition: false,\r\n    setOpenOptionToolbar: false,\r\n    isExpirationRequired: false\r\n},\r\nappiinit_indicators: [],\r\ntracking: {\r\n    eventName: startArgs.tracking.eventName\r\n}\r"},{"path":"../Scripts/FxNet/UILayer/Managers/AdvinionChart/AdvinionChartInitilizer.js","lines":[190,216],"code":"SelectedInstrument: startArgs.instrumentId,\r\nOrderDirection: startArgs.orderDir,\r\nchart: {\r\n    DefaultTimeScale: '1M',\r\n    ShowBarData: 'true',\r\n    PriceChartType: 'candlesticks',\r\n    WaterMark: false,\r\n    TimeZone: 0,\r\n    ExtraData: '5M',\r\n    LineLastCloseMarkRadius: 0,\r\n    AlignToLeft: false,\r\n    MaximumBars: 500,\r\n    HistoryCandlesCount: 500,\r\n    NumberOfVisibleBars: 100\r\n},\r\nactions: {\r\n    showMajors: true,\r\n    showCompares: true,\r\n    setLastUpdateEvent: false,\r\n    enableShowUserPosition: false,\r\n    setOpenOptionToolbar: false,\r\n    isExpirationRequired: false\r\n},\r\nappiinit_indicators: [],\r\ntracking: {\r\n    eventName: 'deal-slip-chart-interaction'\r\n}\r"}]},
{"id":"8d4c148a635d5787eac0b7b944170c05114f4207","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/CCInterWindowsCommunicator.js","lines":[24,34],"code":"    if (!messageHandler.hasOwnProperty(message.msg)) {\r\n        dalCommon.WriteInfoLog(message.msg, \"[Not a function] Message object: \" + objectToString(message) + \",\\nEvent object:\" + objectToString(event) + \",\\nEvent origin:\" + objectToString(event.origin) + \",\\nEvent data:\" + objectToString(event.data));\r\n    }\r\n    else {\r\n        messageHandler[message.msg](message.value);\r\n    }\r\n}\r\n\r\nfunction unregisterMessageHandler() {\r\n    messageHandler = null;\r\n}\r"},{"path":"../Scripts/FxNet/UILayer/Managers/InterWindowsCommunicator.js","lines":[30,37],"code":"    if (!messageHandler.hasOwnProperty(message.msg)) {\r\n        dalCommon.WriteInfoLog(message.msg, \"[Not a function] Message object: \" + objectToString(message) + \",\\nEvent object:\" + objectToString(event) + \",\\nEvent origin:\" + objectToString(event.origin) + \",\\nEvent data:\" + objectToString(event.data));\r\n    } else {\r\n        messageHandler[message.msg](message.value);\r\n    }\r\n}\r\n\r\nfunction logHandlerRegistration(sourceOfMessages, handler) {\r"}]},
{"id":"0a1aeffa3429132c8a6f397d5e45a98ef619d36c","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/CCInterWindowsCommunicator.js","lines":[36,60],"code":"function logHandlerRegistration(sourceOfMessages, handler) {\r\n    var handlerMembers = \"\";\r\n\r\n    for (var member in handler) {\r\n        if (handler.hasOwnProperty(member)) {\r\n            handlerMembers += \"\\t\" + member + \"\\n\";\r\n        }\r\n    }\r\n\r\n    dalCommon.WriteInfoLog(\"RegisterHandler\", \"Registered handler for source: \" + sourceOfMessages + \"\\nHandler members:\\n\" + handlerMembers.slice(0, -1));\r\n}\r\n\r\nfunction objectToString(object) {\r\n\r\n    var objectMembers = object.toString()+\"\\n\";\r\n\r\n    for (var member in object) {\r\n        if (object.hasOwnProperty(member)) {\r\n            objectMembers += \"\\t\" + member + \"\\n\";\r\n        }\r\n    }\r\n    return objectMembers;\r\n}\r\n\r\nfunction setMessageHandler(messageSourceUrl, handler) {\r"},{"path":"../Scripts/FxNet/UILayer/Managers/InterWindowsCommunicator.js","lines":[37,62],"code":"function logHandlerRegistration(sourceOfMessages, handler) {\r\n    var handlerMembers = \"\";\r\n\r\n    for (var member in handler) {\r\n        if (handler.hasOwnProperty(member)) {\r\n            handlerMembers += \"\\t\" + member + \"\\n\";\r\n        }\r\n    }\r\n\r\n    dalCommon.WriteInfoLog(\"RegisterHandler\", \"Registered handler for source: \" + sourceOfMessages + \"\\nHandler members:\\n\" + handlerMembers.slice(0, -1));\r\n}\r\n\r\nfunction objectToString(object) {\r\n\r\n    var objectMembers = object.toString() + \"\\n\";\r\n\r\n    for (var member in object) {\r\n        if (object.hasOwnProperty(member)) {\r\n            objectMembers += \"\\t\" + member + \"\\n\";\r\n        }\r\n    }\r\n\r\n    return objectMembers;\r\n}\r\n\r\nfunction registerMessageHandler(sourceOfMessages, handler) {\r"}]},
{"id":"71494a81fdfbb82028663598c23a4f706255e95b","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/CCInterWindowsCommunicator.js","lines":[75,83],"code":"function isDestinationLoaded(destination, targetOrigin) {\r\n    if (!destination || !destination.postMessage) {\r\n        return false;\r\n    }\r\n\r\n    var loaded = false;\r\n\r\n    try {\r\n        if (destination.location && destination.location.href.indexOf(targetOrigin) >= 0)\r"},{"path":"../Scripts/FxNet/UILayer/Managers/InterWindowsCommunicator.js","lines":[89,97],"code":"function isDestinationLoaded(destination, targetOrigin) {\r\n    if (!destination || !destination.postMessage) {\r\n        return false;\r\n    }\r\n\r\n    var loaded = false;\r\n\r\n    try {\r\n        if (destination.location && destination.location.href.indexOf(targetOrigin) >= 0) {\r"}]},
{"id":"7d3cd15838754c2dbbb850dbe9c26de9cbe32758","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/HistoryManager.js","lines":[127,137],"code":"function isExitingFullScreen(currentState, previousState) {\r\n    var toggleControls = eFullScreenTogleControls;\r\n\r\n    for (var name in toggleControls) {\r\n        if (!toggleControls.hasOwnProperty(name)) {\r\n            continue;\r\n        }\r\n\r\n        var toggleControl = toggleControls[name];\r\n\r\n        if (toggleControl.full === previousState.data.popupId &&\r"},{"path":"../Scripts/FxNet/UILayer/Managers/HistoryManager.js","lines":[146,156],"code":"function isEnteringFullScreen(currentState, previousState) {\r\n    var toggleControls = eFullScreenTogleControls;\r\n\r\n    for (var name in toggleControls) {\r\n        if (!toggleControls.hasOwnProperty(name)) {\r\n            continue;\r\n        }\r\n\r\n        var toggleControl = toggleControls[name];\r\n\r\n        if (toggleControl.full === currentState.data.popupId &&\r"}]},
{"id":"015515fa33d106a001c5aca4f31161430f9fae6e","instances":[{"path":"../Scripts/FxNet/UILayer/Managers/PaymentRequestBuilderForSC.js","lines":[9,21],"code":"pieces.forEach(function (item) {\r\n    var result = item.split('=');\r\n\r\n    if (result && result.length === 2) {\r\n        queryKeysInfo.forEach(function (key) {\r\n            if (result[0] === key.value) {\r\n                request[key.name] = result[1];\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nreturn request;\r"},{"path":"../Scripts/FxNet/UILayer/Managers/PaymentRequestBuilderForSC.js","lines":[28,40],"code":"pieces.forEach(function (item) {\r\n    var result = item.split('=');\r\n\r\n    if (result && result.length === 2) {\r\n        queryKeysInfo.forEach(function (key) {\r\n            if (result[0] === key.value) {\r\n                request[key.name] = result[1];\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nreturn request;\r"}]}]
