{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/devices/web/uilayer/viewmodels/PaymentSelectionBehaviors.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\"deviceviewmodels/PaymentSelectionBehaviors\", [\r\n\t\"require\",\r\n\t\"knockout\",\r\n\t\"enums/paymentsconfigsettings\",\r\n\t\"initdatamanagers/Customer\",\r\n\t\"Dictionary\",\r\n\t\"managers/viewsmanager\",\r\n\t\"viewmodels/dialogs/DialogViewModel\",\r\n], function (require) {\r\n\tvar ko = require(\"knockout\"),\r\n\t\tpaymentsConfigSettings = require(\"enums/paymentsconfigsettings\"),\r\n\t\tCustomer = require(\"initdatamanagers/Customer\"),\r\n\t\tDictionary = require(\"Dictionary\"),\r\n\t\tViewsManager = require(\"managers/viewsmanager\"),\r\n\t\tDialogViewModel = require(\"viewmodels/dialogs/DialogViewModel\");\r\n\r\n\tfunction resetObjects() {\r\n\t\tif (paymentsConfigSettings && paymentsConfigSettings.length > 0) {\r\n\t\t\tpaymentsConfigSettings.forEach(function (paymentConfig) {\r\n\t\t\t\tif (paymentConfig.ViewType) {\r\n\t\t\t\t\tViewsManager.ChangeViewState(eViewTypes[paymentConfig.ViewType], eViewState.Stop);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (paymentConfig.SubViews) {\r\n\t\t\t\t\tpaymentConfig.SubViews.forEach(function (subview) {\r\n\t\t\t\t\t\tif (subview.ViewType) {\r\n\t\t\t\t\t\t\tViewsManager.ChangeViewState(eViewTypes[subview.ViewType], eViewState.Stop);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction paymentSelectedChanged(methodID, paymentDataViewType) {\r\n\t\tresetObjects();\r\n\r\n\t\tvar paymentConfig = paymentsConfigSettings.filter(function (pm) {\r\n\t\t\treturn pm.Id.toString() === methodID.toString();\r\n\t\t});\r\n\r\n\t\tif (paymentConfig[0].SubViews) {\r\n\t\t\tvar s = paymentConfig[0].SubViews.filter(function (subview) {\r\n\t\t\t\treturn subview.ViewId === paymentDataViewType;\r\n\t\t\t});\r\n\r\n\t\t\tinitializeView(s[0]);\r\n\r\n\t\t\tko.postbox.publish(\"deposit-type-changed\", { depositType: s[0].DepositType });\r\n\t\t} else {\r\n\t\t\tif (paymentConfig && paymentConfig.length > 0) {\r\n\t\t\t\tinitializeView(paymentConfig[0]);\r\n\r\n\t\t\t\tko.postbox.publish(\"deposit-type-changed\", { depositType: paymentConfig[0].DepositType });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initializeView(paymentConfig) {\r\n\t\tif (paymentConfig.ViewType) {\r\n\t\t\tViewsManager.ChangeViewState(eViewTypes[paymentConfig.ViewType], eViewState.Start);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getDefaultInstructions() {\r\n\t\tvar wireTransferInstruction = [99, 20, 1, \"\", 1, 0, \"eDepositingActionTypeText_20\", 0, 0, \"2\"];\r\n\r\n\t\treturn [wireTransferInstruction];\r\n\t}\r\n\r\n\tfunction filterAvailablePayments(paymentTypes) {\r\n\t\treturn paymentTypes;\r\n\t}\r\n\r\n\tfunction checkMissingCustomerInformation() {\r\n\t\tif (Customer.prop.hasMissingInformation) {\r\n\t\t\tif (!DialogViewModel.isOpen()) {\r\n\t\t\t\tko.postbox.publish(\"trading-event\", \"agreement-view\");\r\n\r\n\t\t\t\tvar options = {\r\n\t\t\t\t\tautoOpen: true,\r\n\t\t\t\t\tmodal: true,\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tresizable: false,\r\n\t\t\t\t\twidth: 620,\r\n\t\t\t\t\tcloseOnEscape: false,\r\n\t\t\t\t\tdialogClass: \"fx-dialog noCloseButton\",\r\n\t\t\t\t\topenTimeout: 100,\r\n\t\t\t\t\ttitle: Dictionary.GetItem(\"missingCustomerInformationTitle\"),\r\n\t\t\t\t\tappendTo: eDialog.MissingCustomerInformationContainer,\r\n\t\t\t\t\tpersistent: false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tDialogViewModel.openAsync(\r\n\t\t\t\t\teAppEvents.customerInformationLoadedEvent,\r\n\t\t\t\t\teDialog.MissingCustomerInformation,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\teViewTypes.vMissingCustomerInformation\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tViewsManager.ChangeViewState(eViewTypes.vMissingCustomerInformation, eViewState.Stop);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction closeMissingDetailsDialog() {\r\n\t\tif (Customer.prop.hasMissingInformation) {\r\n\t\t\tDialogViewModel.close();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onCustomerSuccessfullUpdate() {\r\n\t\tko.postbox.publish(\"trading-event\", \"agreement-success\");\r\n\r\n\t\tDialogViewModel.close();\r\n\r\n\t\tViewsManager.ChangeViewState(eViewTypes.vMissingCustomerInformation, eViewState.Stop);\r\n\t\tko.postbox.publish(ePostboxTopic.MissingInfo, false);\r\n\t}\r\n\r\n\treturn {\r\n\t\tStop: resetObjects,\r\n\t\tShowSelectedBehavior: paymentSelectedChanged,\r\n\t\tGetDefaultInstructions: getDefaultInstructions,\r\n\t\tFilterAvailablePayments: filterAvailablePayments,\r\n\t\tCheckMissingCustomerInformation: checkMissingCustomerInformation,\r\n\t\tOnCustomerSuccessfullUpdate: onCustomerSuccessfullUpdate,\r\n\t\tCloseMissingDetailsDialog: closeMissingDetailsDialog,\r\n\t};\r\n});\r\n",
  "isBase64": false
}