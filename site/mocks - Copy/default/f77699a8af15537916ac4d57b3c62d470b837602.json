{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/dataaccesslayer/dalDeposit.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'dataaccess/dalDeposit',\r\n    [\r\n        'require',\r\n        'global/UrlResolver',\r\n        'handlers/general',\r\n        'handlers/Ajaxer',\r\n        'generalmanagers/ErrorManager'\r\n    ],\r\n    function DALDeposit(require) {\r\n        var urlResolver = require('global/UrlResolver'),\r\n            general = require('handlers/general'),\r\n            Ajaxer = require('handlers/Ajaxer'),\r\n            errorManager = require('generalmanagers/ErrorManager');\r\n\r\n        function getUserDepositDetails() {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\r\n                    \"TDALDeposit/GetUserActions\", \"Payments/Deposit/GetUserActions\", \"\"\r\n                );\r\n        }\r\n\r\n        function getLastSuccesfullDepositCurrency() {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"TDALDeposit/GetLastSuccesfullDepositCurrency\", \"Payments/Deposit/GetLastSuccesfullDepositCurrency\", \"\")\r\n                .fail(function () {\r\n                    errorManager.onError(\"TDALDeposit/GetLastSuccesfullDepositCurrency\", \"getLastSuccesfullDepositCurrency\", eErrorSeverity.low);\r\n                });\r\n        }\r\n\r\n        function getConcretePayments(selectedCountryId, userCountryId, brokerId) {\r\n            var ajaxer = new Ajaxer(),\r\n                action = 'ConcretePayments/' + 'co' + selectedCountryId + '-uco' + userCountryId + '-br' + brokerId,\r\n                url = urlResolver.getStaticJSActionPath(\"Payments/Deposit\", action);\r\n\r\n            return ajaxer.promises\r\n                .get(\r\n                    \"TDALDeposit/GetConcretePayments\", url,\r\n                    null, null, null, null, null, null, false\r\n                );\r\n        }\r\n\r\n        function getPaymentCountries(brokerId, countryId) {\r\n            var ajaxer = new Ajaxer(),\r\n                action = 'Countries/br' + brokerId + 'c' + countryId,\r\n                url = urlResolver.getStaticJSActionPath(\"Payments/Deposit\", action);\r\n\r\n\r\n            return ajaxer.promises\r\n                .get(\"TDALDeposit/GetPaymentCountries\", url,\r\n                    null, null, null, 0, null, null, false)\r\n                .fail(function () {\r\n                    errorManager.onError(\"TDALDeposit/GetPaymentCountries\", \"getPaymentCountries\", eErrorSeverity.low);\r\n                });\r\n        }\r\n\r\n        function getEWalletCurrencies(paymentType, countryId, concretePaymentTypeId) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"TDALDeposit/getCurrencies\", \"Payments/EWallet/GetCurrencies\"\r\n                    + \"?paymentType=\" + paymentType\r\n                    + \"&countryId=\" + countryId\r\n                    + \"&concretePaymentTypeId=\" + concretePaymentTypeId,\r\n                    \"\", null, null, 0)\r\n                .fail(function () {\r\n                    errorManager.onError(\"TDALDeposit/getEWalletCurrencies\", \"getEWalletCurrencies\", eErrorSeverity.low);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n\r\n        function getPaymentStatus(requestId, depositingActionType, OnDepositPaymentStatusTimeout) {\r\n            return getPaymentStatusBase(requestId, depositingActionType, OnDepositPaymentStatusTimeout, \"Payments/Deposit/GetPaymentStatus\", \"TDALDeposit/getPaymentStatus\", \"getPaymentStatus\");\r\n        }\r\n\r\n        function getFinalPaymentStatus(requestId, depositingActionType, OnDepositFinalPaymentStatusTimeout) {\r\n            return getPaymentStatusBase(requestId, depositingActionType, OnDepositFinalPaymentStatusTimeout, \"Payments/Deposit/getFinalPaymentStatus\", \"TDALDeposit/getFinalPaymentStatus\", \"getFinalPaymentStatus\");\r\n        }\r\n\r\n        function getPaymentStatusBase(requestId, depositingActionType, OnRequestTimeoutFunction, apiPath, callerName, methodName) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(callerName, apiPath + \"?requestId=\" + requestId + \"&depositingActionType=\" + depositingActionType)\r\n                .fail(function (error) {\r\n                    if (error instanceof AjaxError && (error.httpStatus === 504 || error.httpStatus === 0) && general.isFunctionType(OnRequestTimeoutFunction)) {\r\n                        OnRequestTimeoutFunction();\r\n                    } else {\r\n                        errorManager.onError(callerName, methodName, eErrorSeverity.medium);\r\n                        throw error;\r\n                    }\r\n                });\r\n        }\r\n\r\n        //-------------------------------------------------\r\n        // CreditCard\r\n        //---------------------------------------------------\r\n\r\n        function getCreditCardData(paymentType) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"TDALDeposit/GetCreditCardData\", \"api/payments/ccdeposit/GetCreditCardData/\" + paymentType,\r\n                    \"\",\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"TDALDeposit/GetCreditCardData\", \"GetCreditCardData\", eErrorSeverity.medium);\r\n                    return error;\r\n                });\r\n        }\r\n\r\n        function getAllowedCreditCardData() {\r\n            var ajaxer = new Ajaxer(),\r\n                controller = 'CreditCard',\r\n                action = 'GetAllowedCreditCards',\r\n                url = \"Payments/\" + controller + \"/\" + action;\r\n\r\n            return ajaxer.promises\r\n                .get(\"TDALDeposit/getAllowedCreditCards\", url)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"TDALDeposit/GetAllowedCreditCards\", \"GetAllowedCreditCards\", eErrorSeverity.medium);\r\n                    throw error;\r\n                });\r\n        }\r\n\r\n        function getAllowedCreditCardsWithAmountValidation() {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"TDALDeposit/GetCreditCardData\", \"api/payments/ccdeposit/GetAllowedCreditCardsWithAmountValidation\")\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"TDALDeposit/GetAllowedCreditCardsWithAmountValidation\", \"GetAllowedCreditCardsWithAmountValidation\", eErrorSeverity.medium);\r\n                    throw error;\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n\r\n        function setUsedCardAsDefault(paymentID) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .post(\"TDALDeposit/setUsedCardAsDefault\", \"api/payments/ccdeposit/SetUsedCardAsDefault/\" + paymentID,\r\n                    \"\",\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"TDALDeposit/setUsedCardAsDefault\", error.message, eErrorSeverity.low);\r\n                })\r\n                .done();\r\n        }\r\n\r\n        //---------------------------------------------------\r\n\r\n        function removeUsedCard(paymentID) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .post(\"TDALDeposit/removeUsedCard\", \"api/payments/ccdeposit/RemoveUsedCard/\" + paymentID,\r\n                    \"\",\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"TDALDeposit/removeUsedCard\", error.message, eErrorSeverity.low);\r\n                });\r\n        }\r\n\r\n        function depositCreditCard(ccRequest) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            var sb = new StringBuilder(),\r\n                browserDetails = Object.assign({\r\n                    challengeWindowSize: ePaymentsChallengeWindowSize.Fullscreen\r\n                },\r\n                    Browser.getBrowserDetails());\r\n\r\n            sb.append(String.format(\"paymentID={0}&\", ccRequest.paymentID || \"-1\"));\r\n            sb.append(String.format(\"cardNumber={0}&\", ccRequest.cardNumber));\r\n            sb.append(String.format(\"expMonth={0}&\", ccRequest.expMonth));\r\n            sb.append(String.format(\"expYear={0}&\", ccRequest.expYear));\r\n            sb.append(String.format(\"cardTypeID={0}&\", ccRequest.cardTypeID));\r\n            sb.append(String.format(\"depositCurrency={0}&\", ccRequest.depositCurrency));\r\n            sb.append(String.format(\"cardHolderName={0}&\", ccRequest.cardHolderName));\r\n            sb.append(String.format(\"amount={0}&\", ccRequest.amount));\r\n            sb.append(String.format(\"cvv={0}&\", ccRequest.cvv));\r\n            sb.append(String.format(\"paymentAuthMode={0}&\", ccRequest.paymentAuthMode));\r\n            sb.append(String.format(\"browserData={0}&\", JSON.stringify(browserDetails)));\r\n            sb.append(String.format(\"SecurityToken={0}\", systemInfo.securityToken));\r\n\r\n            return ajaxer.promises\r\n                .post(\"dalDeposit:depositCreditCard\", \"api/payments/ccdeposit/DepositCreditCard\",\r\n                    sb.toString(),\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"api/payments/ccdeposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        function depositEWallet(ccRequest) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify(ccRequest);\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\"dalDeposit:depositEWallet\",\r\n                    \"Payments/EWallet/Deposit\",\r\n                    params,\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"Payments/EWallet/Deposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        function depositEmailEWallet(ccRequest) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify(ccRequest);\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\"dalDeposit:depositEWallet\",\r\n                    \"Payments/EWalletExtended/Deposit\",\r\n                    params,\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"Payments/EWalletExtended/Deposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        function depositMoneyBookers(ccRequest) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify(ccRequest);\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\"dalDeposit:depositEWallet\",\r\n                    \"Payments/MoneyBookers/Deposit\",\r\n                    params,\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"Payments/MoneyBookers/Deposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n\r\n        function getWireTransferCountries() {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"RegularWireTransfer/getWireTransferCountries\", \"Payments/RegularWireTransfer/GetWireTransferCountries\",\r\n                    null,\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function () {\r\n                    errorManager.onError(\"RegularWireTransfer/getWireTransferCountries\", \"\", eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n\r\n        function getWireTransferCountryInfo(countryID) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"RegularWireTransfer/getWireTransferCountryInfo\", \"Payments/RegularWireTransfer/GetWireTransferCountryInfo\",\r\n                    \"countryID=\" + countryID,\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function () {\r\n                    errorManager.onError(\"RegularWireTransfer/GetWireTransferCountryInfo\", \"\", eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n\r\n        function depositWireTransfer(req) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify(req);\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\"dalDeposit:depositWireTransfer\",\r\n                    \"Payments/RegularWireTransfer/Deposit\",\r\n                    params,\r\n                    null,\r\n                    null, 0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"Payments/RegularWireTransfer/Deposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n\r\n        //---------------------------------------------------\r\n        // Astropay\r\n        //---------------------------------------------------\r\n\r\n        function getAstropayPaymentMethods() {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .get(\"Astropay/getPaymentMethods\", \"Payments/Astropay/GetPaymentMethods\",\r\n                    null,\r\n                    null,\r\n                    null,\r\n                    0, null, null, false)\r\n                .fail(function () {\r\n                    errorManager.onError(\"Astropay/getPaymentMethods\", \"\", eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n        // InatecAPM\r\n        //---------------------------------------------------\r\n        function depositInatecAPM(ccRequest) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify(ccRequest);\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\"dalDeposit:depositInatecAPM\",\r\n                    \"Payments/InatecAPM/Deposit\",\r\n                    params,\r\n                    null,\r\n                    null,\r\n                    0)\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"Payments/InatecAPM/Deposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n        // ForcedClearers\r\n        //---------------------------------------------------\r\n        function getForcedClearers() {\r\n            var ajaxer = new Ajaxer(),\r\n                url = \"api/backoffice/deposit/getforcedclearers/\";\r\n\r\n            return ajaxer.promises\r\n                .get(\r\n                    'dataaccess/dalDeposit',\r\n                    url,\r\n                    null,\r\n                    null,\r\n                    null,\r\n                    0, null, null, false)\r\n                .then(JSON.parse)\r\n                .fail(function (error) {\r\n                    errorManager.onError('dataaccess/dalDeposit', error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n        // Forced Deposit\r\n        //---------------------------------------------------\r\n        function submitForcedDeposit(forcedDepositData) {\r\n            var ajaxer = new Ajaxer();\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\r\n                    'dataaccess/dalDeposit',\r\n                    \"api/backoffice/deposit/doforceddeposit\",\r\n                    JSON.stringify(forcedDepositData),\r\n                    null,\r\n                    null)\r\n                .fail(function (error) {\r\n                    errorManager.onError('dataaccess/dalDeposit', error.message, eErrorSeverity.medium);\r\n                    return error;\r\n                });\r\n        }\r\n\r\n        function failDeposit(requestId) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify({ requestId: requestId });\r\n\r\n            return ajaxer.promises\r\n                .jsonPost(\r\n                    \"TDALDeposit/failDeposit\",\r\n                    \"Payments/Deposit/FailDeposit\",\r\n                    params,\r\n                    null,\r\n                    null\r\n                )\r\n                .fail(function (error) {\r\n                    errorManager.onError(\"Payments/Deposit/FailDeposit\", error.message, eErrorSeverity.medium);\r\n                });\r\n        }\r\n\r\n        //---------------------------------------------------\r\n        // Deposit activity logging\r\n        //---------------------------------------------------\r\n        function sendDepositActivityMessage(errorType, errorDetails, isGenericCreditCard, frameGuid) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify({\r\n                    errorType: errorType,\r\n                    errorDetails: errorDetails,\r\n                    isGenericCreditCard: isGenericCreditCard,\r\n                    frameGuid: frameGuid\r\n                });\r\n\r\n            ajaxer.jsonPost(\r\n                \"Deposit/WriteDepositErrorActivityLog\",\r\n                \"Deposit/WriteDepositErrorActivityLog\",\r\n                params,\r\n                general.emptyFn,\r\n                function (error) {\r\n                    var msg = error ? error.message : \"\";\r\n\r\n                    errorManager.onError(\"Deposit/WriteDepositErrorActivityLog\", msg, eErrorSeverity.medium);\r\n                }\r\n            );\r\n        }\r\n\r\n        function logFrameNotLoadedMessage(errorType, errorDetails, frameGuid) {\r\n            sendDepositActivityMessage(errorType, errorDetails, true, frameGuid);\r\n        }\r\n\r\n        function logGenericCCDepositActivityMessage(errorType, errorDetails) {\r\n            sendDepositActivityMessage(errorType, errorDetails, true);\r\n        }\r\n\r\n        function logDepositCommunication(messageType, message, action) {\r\n            sendDepositCommunication(messageType, message, action, false);\r\n        }\r\n\r\n        function logGenericCCDepositCommunication(messageType, message, action) {\r\n            sendDepositCommunication(messageType, message, action, true);\r\n        }\r\n\r\n        function sendDepositCommunication(messageType, message, action, isGenericCreditCard) {\r\n            var ajaxer = new Ajaxer(),\r\n                params = JSON.stringify({\r\n                    messageType: messageType,\r\n                    message: message,\r\n                    action: action,\r\n                    isGenericCreditCard: isGenericCreditCard\r\n                });\r\n\r\n            ajaxer.jsonPost(\r\n                \"Deposit/LogDepositCommunication\",\r\n                \"Deposit/LogDepositCommunication\",\r\n                params,\r\n                general.emptyFn,\r\n                function () {\r\n                    errorManager.onError(\"Deposit/LogDepositCommunication\", \"\", eErrorSeverity.medium);\r\n                }\r\n            );\r\n        }\r\n\r\n        return {\r\n            getPaymentStatus: getPaymentStatus,\r\n            getFinalPaymentStatus: getFinalPaymentStatus,\r\n            getCreditCardData: getCreditCardData,\r\n            getAllowedCreditCardData: getAllowedCreditCardData,\r\n            getAllowedCreditCardsWithAmountValidation: getAllowedCreditCardsWithAmountValidation,\r\n            depositCreditCard: depositCreditCard,\r\n            depositEWallet: depositEWallet,\r\n            depositEmailEWallet: depositEmailEWallet,\r\n            depositMoneyBookers: depositMoneyBookers,\r\n            depositInatecAPM: depositInatecAPM,\r\n            setUsedCardAsDefault: setUsedCardAsDefault,\r\n            removeUsedCard: removeUsedCard,\r\n            getWireTransferCountryInfo: getWireTransferCountryInfo,\r\n            depositWireTransfer: depositWireTransfer,\r\n            getEWalletCurrencies: getEWalletCurrencies,\r\n            getAstropayPaymentMethods: getAstropayPaymentMethods,\r\n            getWireTransferCountries: getWireTransferCountries,\r\n            getConcretePayments: getConcretePayments,\r\n            getPaymentCountries: getPaymentCountries,\r\n            getUserDepositDetails: getUserDepositDetails,\r\n            getLastSuccesfullDepositCurrency: getLastSuccesfullDepositCurrency,\r\n            failDeposit: failDeposit,\r\n            getForcedClearers: getForcedClearers,\r\n            submitForcedDeposit: submitForcedDeposit,\r\n\r\n            LogDepositCommunication: logDepositCommunication,\r\n            LogGenericCCDepositActivityMessage: logGenericCCDepositActivityMessage,\r\n            LogGenericCCDepositCommunication: logGenericCCDepositCommunication,\r\n            LogFrameNotLoadedMessage: logFrameNotLoadedMessage\r\n        };\r\n    }\r\n);\r\n",
  "isBase64": false
}