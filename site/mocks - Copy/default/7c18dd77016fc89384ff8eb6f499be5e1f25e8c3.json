{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/FxNet/LogicLayer/Deal/InstrumentInfoLines.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'FxNet/LogicLayer/Deal/InstrumentInfoLines',\r\n    [\r\n        'require',\r\n        'Dictionary',\r\n        'handlers/general',\r\n        'LoadDictionaryContent!deals_InstrumentInfoTool'\r\n    ],\r\n    function (require) {\r\n        var dictionary = require('Dictionary'),\r\n            general = require('handlers/general'),\r\n            instrument, data,\r\n            instrumentInfoConfig = [\r\n                {\r\n                    id: instrumentInfoProps.pipValue,\r\n                    available: true,\r\n                    label: 'txtPipValue',\r\n                    labelMobile: 'lblPipValue',\r\n                    tooltip: 'txtPipValueInfo',\r\n                    attrIdOfValue: 'lblPipValue',\r\n                    attrIdOfValueMobile: 'lblPipValue',\r\n                    value: 'pipValue'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.pipWorth,\r\n                    available: true,\r\n                    label: 'lblPipWorth',\r\n                    labelMobile: 'lblPipWorth',\r\n                    tooltip: 'txtPipWorthInfo',\r\n                    attrIdOfValue: 'lblPipWorth',\r\n                    attrIdOfValueMobile: 'lblPipWorth',\r\n                    value: 'pipWorth'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.requiredMargin,\r\n                    available: true,\r\n                    label: 'lblRequiredMargin',\r\n                    labelMobile: 'lblRequiredMargin',\r\n                    tooltip: 'txtRequiredMarginInfo',\r\n                    attrIdOfValue: 'lblRequiredMargin',\r\n                    attrIdOfValueMobile: 'lblRequiredMargin',\r\n                    value: 'requiredMargin'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.offHoursRequiredMargin,\r\n                    available: true,\r\n                    label: 'lblOffHoursRequiredMargin',\r\n                    labelMobile: 'lblOffHoursRequiredMargin',\r\n                    tooltip: 'txtOffHoursRequiredMarginInfo',\r\n                    attrIdOfValue: 'lblOffHoursRequiredMargin',\r\n                    attrIdOfValueMobile: 'lblOffHoursRequiredMargin',\r\n                    value: 'offHoursRequiredMargin'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.maximumLeverage,\r\n                    available: true,\r\n                    label: 'lblMaximumLeverage',\r\n                    labelMobile: 'lblMaximumLeverage',\r\n                    tooltip: null,\r\n                    attrIdOfValue: 'lblMaximumLeverage',\r\n                    attrIdOfValueMobile: 'lblMaximumLeverage',\r\n                    value: 'maximumLeverage'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.minDealAmount,\r\n                    available: true,\r\n                    label: 'minDealAmountLabel',\r\n                    labelMobile: 'minDealAmountLabel',\r\n                    tooltip: 'txtMinAmountToTrade',\r\n                    attrIdOfValue: 'lblMinAmount',\r\n                    attrIdOfValueMobile: 'lblMinAmount',\r\n                    value: 'minAmount'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.maxDealAmount,\r\n                    available: true,\r\n                    label: 'maxDealAmountLabel',\r\n                    labelMobile: 'maxDealAmountLabel',\r\n                    tooltip: 'txtMaxAmountToTrade',\r\n                    attrIdOfValue: 'lblMaxAmount',\r\n                    attrIdOfValueMobile: 'lblMaxAmount',\r\n                    value: 'maxAmount'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.marketPriceTolerance,\r\n                    available: true,\r\n                    label: 'lblMaketPriceTolerance',\r\n                    labelMobile: 'lblMraketPriceTolerance',\r\n                    tooltip: 'txtMaketPriceToleranceInfo',\r\n                    attrIdOfValue: 'lblMaketPriceTolerance',\r\n                    attrIdOfValueMobile: 'lblMarketPriceTolerance',\r\n                    value: 'marketPriceTolerance'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.ofSell,\r\n                    available: true,\r\n                    label: 'lblOFSell',\r\n                    labelMobile: 'lblOFSell',\r\n                    tooltip: 'txtShortOvernightFinancingInfo',\r\n                    attrIdOfValue: 'lblovernightFinancingShort',\r\n                    attrIdOfValueMobile: 'lblovernightFinancingShort',\r\n                    value: 'overnightFinancingShort'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.ofBuy,\r\n                    available: true,\r\n                    label: 'lblOFBuy',\r\n                    labelMobile: 'lblOFBuy',\r\n                    tooltip: 'txtLongOvernightFinancingInfo',\r\n                    attrIdOfValue: 'lblovernightFinancingLong',\r\n                    attrIdOfValueMobile: 'lblovernightFinancingLong',\r\n                    value: 'overnightFinancingLong'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.ofPercentageSell,\r\n                    available: true,\r\n                    label: 'lblOFPercentageSell',\r\n                    labelMobile: 'lblOFPercentageSell',\r\n                    tooltip: 'txtOvernightFinancingPercent',\r\n                    attrIdOfValue: 'lblOFPercentageSell',\r\n                    attrIdOfValueMobile: 'lblOFPercentageSell',\r\n                    value: 'overnightFinancingPercentageSell'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.ofPercentageBuy,\r\n                    available: true,\r\n                    label: 'lblOFPercentageBuy',\r\n                    labelMobile: 'lblOFPercentageBuy',\r\n                    tooltip: 'txtOvernightFinancingPercent',\r\n                    attrIdOfValue: 'lblOFPercentageBuy',\r\n                    attrIdOfValueMobile: 'lblOFPercentageBuy',\r\n                    value: 'overnightFinancingPercentageBuy'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.overnightFinancingGMT,\r\n                    available: true,\r\n                    label: 'lblOvernightFinancingGMT',\r\n                    labelMobile: 'lblOvernightFinancingGMT',\r\n                    tooltip: null,\r\n                    attrIdOfValue: 'lblOFGMT',\r\n                    attrIdOfValueMobile: 'lblOvernightFinancingGMT',\r\n                    value: 'overnightFinancingTimeGMT'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.weekendFinancing,\r\n                    available: true,\r\n                    label: 'lblWeekendFinancing',\r\n                    labelMobile: 'lblWeekendFinancing',\r\n                    tooltip: null,\r\n                    attrIdOfValue: '',\r\n                    attrIdOfValueMobile: '',\r\n                    value: ''\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.rolloverDate,\r\n                    available: true,\r\n                    label: 'lblRolloverDate',\r\n                    labelMobile: 'lblRolloverDate',\r\n                    tooltip: null,\r\n                    attrIdOfValue: 'lblRolloverDate',\r\n                    attrIdOfValueMobile: 'lblRolloverDate',\r\n                    value: 'rolloverDate'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.dividendDate,\r\n                    available: true,\r\n                    label: 'lblDividendDate',\r\n                    labelMobile: 'lblDividendDate',\r\n                    tooltip: null,\r\n                    attrIdOfValue: 'lblDividendDate',\r\n                    attrIdOfValueMobile: 'lblDividendDate',\r\n                    value: 'dividendDate'\r\n                },\r\n                {\r\n                    id: instrumentInfoProps.dividendAmount,\r\n                    available: true,\r\n                    label: 'lblDividendAmount',\r\n                    labelMobile: 'lblDividendAmount',\r\n                    tooltip: null,\r\n                    attrIdOfValue: 'lblDividendAmount',\r\n                    attrIdOfValueMobile: 'lblDividendAmount',\r\n                    value: 'dividendAmount'\r\n                }\r\n            ];\r\n\r\n        function getInfoLines(instrumentData, instrumentInfoViewModelData) {\r\n            var result = [];\r\n\r\n            instrument = instrumentData;\r\n            data = instrumentInfoViewModelData;\r\n\r\n            instrumentInfoConfig.forEach(function forEachInfoLine(item) {\r\n                var infoLine = parseInfo(item);\r\n                if (infoLine.available) {\r\n                    result.push(infoLine);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        function parseInfo(item) {\r\n            var infoProps = instrumentInfoProps,\r\n                tooltipConfig = { tooltipClass: 'tooltip tooltipBottom', position: { my: 'center bottom-18', at: 'center center' } },\r\n                resource = 'deals_InstrumentInfoTool',\r\n                infoLine = {\r\n                    id: item.id,\r\n                    available: item.available,\r\n                    attr: setValueMarkupAttributes(item),\r\n                    computedLabel: false,\r\n                    resourceName: resource,\r\n                    label: item.label,\r\n                    labelm: item.labelMobile,\r\n                    value: '',\r\n                    tooltip: item.tooltip ? dictionary.GetItem(item.tooltip, resource) : null,\r\n                    tooltipConfig: tooltipConfig,\r\n                };\r\n\r\n            switch (item.id) {\r\n                case infoProps.pipWorth:\r\n                    infoLine.value = Format.toNumberWithCurrency(data[item.value](), { currencyId: data.customerSymbolId() });\r\n                    break;\r\n\r\n                case infoProps.offHoursRequiredMargin:\r\n                    infoLine.available = infoLine.available && data.displayOffHoursRequiredMargin();\r\n                    infoLine.value = data[item.value]();\r\n                    break;\r\n\r\n                case infoProps.maxDealAmount:\r\n                case infoProps.minDealAmount:\r\n                    var round = item.id === infoProps.minDealAmount ? Math.ceil : Math.floor;\r\n                    infoLine.label = data[item.label]();\r\n                    infoLine.labelm = data[item.label]();\r\n                    infoLine.computedLabel = true;\r\n                    infoLine.value = !data.isStock() ? data[item.value]() : general.formatNumberWithThousandsSeparator(round(general.toNumeric(data[item.value]())));\r\n                    break;\r\n\r\n                case infoProps.ofSell:\r\n                case infoProps.ofBuy:\r\n                    infoLine.available = infoLine.available && !data.isStock() && data.isNotIslamicDealPermit &&\r\n                        instrument.isOvernightFinancing();\r\n                    infoLine.value = Format.toNumberWithCurrency(data[item.value](), { currencyId: data.customerSymbolId() });\r\n                    break;\r\n\r\n                case infoProps.ofPercentageSell:\r\n                case infoProps.ofPercentageBuy:\r\n                case infoProps.overnightFinancingGMT:\r\n                    infoLine.available = infoLine.available && !data.isStock() && data.isNotIslamicDealPermit &&\r\n                        instrument.isOvernightFinancing();\r\n                    infoLine.value = data[item.value]();\r\n                    break;\r\n\r\n                case infoProps.rolloverDate:\r\n                    infoLine.available = infoLine.available && instrument.isFuture && data.rolloverDate();\r\n                    infoLine.value = data[item.value]();\r\n                    break;\r\n\r\n                case infoProps.dividendDate:\r\n                    infoLine.available = infoLine.available && instrument.isShare && data.dividendDate();\r\n                    infoLine.value = data[item.value]();\r\n                    break;\r\n\r\n                case infoProps.dividendAmount:\r\n                    infoLine.available = infoLine.available && instrument.isShare && data.dividendDate() && data.dividendAmount();\r\n                    infoLine.value = Format.toNumberWithCurrency(data[item.value](), { currencyId: data.otherInstrumentSymbol() });\r\n                    break;\r\n\r\n                case infoProps.weekendFinancing:\r\n                    infoLine.available = infoLine.available && !data.isStock() && data.weekendFinancingType() != eWeekendFinancingTypes.None && data.isNotIslamicDealPermit;\r\n                    if (!infoLine.available) {\r\n                        return infoLine;\r\n                    }\r\n\r\n                    var valueKey = data.weekendFinancingType() == eWeekendFinancingTypes.Thursday ?\r\n                        'txtThursday' : (\r\n                            data.weekendFinancingType() == eWeekendFinancingTypes.Friday ? 'txtFriday' : null\r\n                        ),\r\n                        dataAutomation = data.weekendFinancingType() == eWeekendFinancingTypes.Thursday ?\r\n                            'lblWeekendFinancingThursday' : (\r\n                                data.weekendFinancingType() == eWeekendFinancingTypes.Friday ? 'lblWeekendFinancingFriday' : null\r\n                            );\r\n\r\n                    if (dataAutomation) {\r\n                        infoLine.attr['dataAutomation'] = dataAutomation;\r\n                    }\r\n\r\n                    infoLine.value = valueKey ? dictionary.GetItem(valueKey, resource, '') : '';\r\n                    break;\r\n\r\n                default:\r\n                    infoLine.value = data[item.value]();\r\n                    break;\r\n            }\r\n\r\n            return infoLine;\r\n        }\r\n\r\n        function setValueMarkupAttributes(item) {\r\n            var attributes = {};\r\n\r\n            if (item.attrIdOfValue) {\r\n                attributes['id'] = item.attrIdOfValue;\r\n            }\r\n\r\n            if (item.attrIdOfValueMobile) {\r\n                attributes['idm'] = item.attrIdOfValueMobile;\r\n            }\r\n\r\n            return attributes;\r\n        }\r\n\r\n        return {\r\n            GetInfoLines: getInfoLines\r\n        };\r\n    }\r\n);",
  "isBase64": false
}