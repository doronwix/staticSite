{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/uilayer/viewmodels/CashBackViewModel.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\"viewmodels/CashBackViewModel\", [\r\n\t\"require\",\r\n\t\"knockout\",\r\n\t\"handlers/general\",\r\n\t\"Q\",\r\n\t\"dataaccess/dalorder\",\r\n\t\"initdatamanagers/Customer\",\r\n\t\"helpers/KoComponentViewModel\",\r\n\t\"initdatamanagers/InstrumentsManager\",\r\n\t\"managers/instrumentTranslationsManager\",\r\n\t\"managers/viewsmanager\",\r\n\t\"viewmodels/dialogs/DialogViewModel\",\r\n\t\"cachemanagers/PortfolioStaticManager\",\r\n\t\"global/UrlResolver\",\r\n\t\"cachemanagers/bonusmanager\",\r\n], function (require) {\r\n\tvar ko = require(\"knockout\"),\r\n\t\tgeneral = require(\"handlers/general\"),\r\n\t\tQ = require(\"Q\"),\r\n\t\tdalOrders = require(\"dataaccess/dalorder\"),\r\n\t\tCustomer = require(\"initdatamanagers/Customer\"),\r\n\t\tKoComponentViewModel = require(\"helpers/KoComponentViewModel\"),\r\n\t\tInstrumentsManager = require(\"initdatamanagers/InstrumentsManager\"),\r\n\t\tInstrumentTranslationsManager = require(\"managers/instrumentTranslationsManager\"),\r\n\t\tViewsManager = require(\"managers/viewsmanager\"),\r\n\t\tDialogViewModel = require(\"viewmodels/dialogs/DialogViewModel\"),\r\n\t\tPortfolioStaticManager = require(\"cachemanagers/PortfolioStaticManager\"),\r\n\t\tUrlResolver = require(\"global/UrlResolver\"),\r\n\t\tbonusManager = require(\"cachemanagers/bonusmanager\");\r\n\r\n\tvar CashBackViewModel = general.extendClass(KoComponentViewModel, function (params) {\r\n\t\tvar self = this,\r\n\t\t\tparent = this.parent, // inherited from KoComponentViewModel\r\n\t\t\tdata = this.Data; // inherited from KoComponentViewModel\r\n\r\n\t\tfunction setObservables() {\r\n\t\t\tdata.Summary = {\r\n\t\t\t\tEndDate: ko.observable(\"\"),\r\n\t\t\t\tCashBack: ko.observable(\"\"),\r\n\t\t\t\tVolume: ko.observable(\"\"),\r\n\t\t\t\tMaxCashBack: ko.observable(\"\"),\r\n\t\t\t\tMaxVolume: ko.observable(\"\"),\r\n\t\t\t};\r\n\t\t\tdata.Enhanced = ko.observableArray();\r\n\t\t\tdata.Regular = ko.observableArray();\r\n\t\t\tdata.isDataLoaded = ko.observable(false);\r\n\t\t\tdata.customerSymbolId = ko.observable(Customer.prop.baseCcyId());\r\n\t\t\tdata.hasWeightedVolumeFactor = ko.observable(Customer.prop.hasWeightedVolumeFactor);\r\n\r\n\t\t\tstartNewDeal.enabled = ko.observable(!!params.enableNewDeal);\r\n\t\t}\r\n\r\n\t\tfunction setComputables() {\r\n\t\t\tdata.hasEnhancedInstruments = ko.computed(function () {\r\n\t\t\t\treturn data.Enhanced() && data.Enhanced().length > 0;\r\n\t\t\t});\r\n\t\t\tdata.hasRegularInstruments = ko.computed(function () {\r\n\t\t\t\treturn data.Regular() && data.Regular().length > 0;\r\n\t\t\t});\r\n\t\t\tdata.hasVolumes = ko.computed(function () {\r\n\t\t\t\treturn data.hasEnhancedInstruments() || data.hasRegularInstruments();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction setSummaryData(summaryData) {\r\n\t\t\tvar vol = general.toNumeric(summaryData.WeightedVolume),\r\n\t\t\t\tmaxCb = general.toNumeric(summaryData.PendingBonusAmount),\r\n\t\t\t\tmaxVol = general.toNumeric(summaryData.ConditionalVolume),\r\n\t\t\t\tcb = maxVol === 0 ? 0 : (maxCb * vol) / maxVol;\r\n\r\n\t\t\tcb = Math.min(cb, maxCb);\r\n\t\t\tdata.Summary.CashBack(cb);\r\n\t\t\tdata.Summary.MaxCashBack(maxCb);\r\n\t\t\tdata.Summary.Volume(vol);\r\n\t\t\tdata.Summary.MaxVolume(maxVol);\r\n\t\t\tdata.Summary.EndDate(summaryData.PendingBonusEnd);\r\n\t\t}\r\n\r\n\t\tfunction setIntrumentsCashBack(volumes) {\r\n\t\t\tvolumes.forEach(function (row, index) {\r\n\t\t\t\tvar estimatedCb = (row.USDAmountWeighted / data.Summary.MaxVolume()) * data.Summary.MaxCashBack();\r\n\t\t\t\tif (isNaN(estimatedCb)) {\r\n\t\t\t\t\testimatedCb = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvolumes[index].usdAmount = general.formatNumber(String(row.USDAmount));\r\n\t\t\t\tvolumes[index].usdAmountWeighted = general.formatNumber(String(row.USDAmountWeighted));\r\n\t\t\t\tvolumes[index].estimatedCashBack = parseFloat(estimatedCb).toFixed(2);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction setVolumesData(result) {\r\n\t\t\tsetSummaryData(result[0].Summary);\r\n\t\t\tsetIntrumentsCashBack(result[0].EnhancedInstruments);\r\n\r\n\t\t\tfor (var i = 0; i < result[0].EnhancedInstruments.length; i++) {\r\n\t\t\t\tvar enhancedInstrument = InstrumentsManager.GetInstrument(\r\n\t\t\t\t\tresult[0].EnhancedInstruments[i].InstrumentId\r\n\t\t\t\t);\r\n\t\t\t\tresult[0].EnhancedInstruments[i].baseSymbolId = enhancedInstrument.baseSymbol;\r\n\t\t\t\tresult[0].EnhancedInstruments[i].otherSymbolId = enhancedInstrument.otherSymbol;\r\n\t\t\t}\r\n\r\n\t\t\tdata.Enhanced(result[0].EnhancedInstruments);\r\n\t\t\tsetIntrumentsCashBack(result[0].RegularInstruments);\r\n\r\n\t\t\tfor (var counter = 0; counter < result[0].RegularInstruments.length; counter++) {\r\n\t\t\t\tvar regularInstrument = InstrumentsManager.GetInstrument(\r\n\t\t\t\t\tresult[0].RegularInstruments[counter].InstrumentId\r\n\t\t\t\t);\r\n\t\t\t\tresult[0].RegularInstruments[counter].baseSymbolId = regularInstrument.baseSymbol;\r\n\t\t\t\tresult[0].RegularInstruments[counter].otherSymbolId = regularInstrument.otherSymbol;\r\n\t\t\t}\r\n\r\n\t\t\tdata.Regular(result[0].RegularInstruments);\r\n\t\t}\r\n\r\n\t\tfunction setContentForNoVolumeButHasWeightedVolume() {\r\n\t\t\tvar enhancedInstrumentList, maxMultiplier, randomEnhancedInstrument, enhancedInstrumentNames;\r\n\r\n\t\t\tenhancedInstrumentList = InstrumentsManager.GetEnhancedInstruments().map(function (instrument) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: instrument.id,\r\n\t\t\t\t\tname: InstrumentTranslationsManager.Short(instrument.id),\r\n\t\t\t\t\tmultiplier: instrument.weightedVolumeFactor,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tif (enhancedInstrumentList.length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tenhancedInstrumentNames = enhancedInstrumentList\r\n\t\t\t\t.map(function (instr) {\r\n\t\t\t\t\treturn instr.name;\r\n\t\t\t\t})\r\n\t\t\t\t.join(\", \");\r\n\t\t\tmaxMultiplier = Math.round(\r\n\t\t\t\tMath.max.apply(\r\n\t\t\t\t\tMath,\r\n\t\t\t\t\tenhancedInstrumentList.map(function (instr) {\r\n\t\t\t\t\t\treturn instr.multiplier;\r\n\t\t\t\t\t})\r\n\t\t\t\t) * 100\r\n\t\t\t);\r\n\t\t\trandomEnhancedInstrument =\r\n\t\t\t\tenhancedInstrumentList[Math.floor(Math.random() * enhancedInstrumentList.length)];\r\n\r\n\t\t\tdata.enhancedInstruments = enhancedInstrumentList;\r\n\t\t\tdata.maxMultiplier = maxMultiplier;\r\n\t\t\tdata.randomEnhancedInstrument = {\r\n\t\t\t\tname: randomEnhancedInstrument.name,\r\n\t\t\t\tequivalentVolume: Math.round(randomEnhancedInstrument.multiplier * 100),\r\n\t\t\t};\r\n\t\t\tdata.enhancedInstrumentNames = enhancedInstrumentNames;\r\n\t\t}\r\n\r\n\t\tfunction init(customSettings) {\r\n\t\t\t// if coming from deep link and no cash back pending bonus\r\n\t\t\tif (\r\n\t\t\t\tPortfolioStaticManager.Portfolio.pendingBonusType !== ePendingBonusType.cashBack ||\r\n\t\t\t\tbonusManager.bonus().amountBase <= 0\r\n\t\t\t) {\r\n\t\t\t\tViewsManager.SwitchViewVisible(Customer.prop.mainPage, {});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tparent.init.call(self, customSettings); // inherited from KoComponentViewModel\r\n\r\n\t\t\tsetObservables();\r\n\t\t\tsetComputables();\r\n\r\n\t\t\tdalOrders\r\n\t\t\t\t.CashBackVolumesInfo()\r\n\t\t\t\t.then(function (result) {\r\n\t\t\t\t\tsetVolumesData(result);\r\n\t\t\t\t\tdata.isDataLoaded(true);\r\n\t\t\t\t})\r\n\t\t\t\t.done();\r\n\r\n\t\t\tsetContentForNoVolumeButHasWeightedVolume();\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tparent.dispose.call(self); // inherited from KoComponentViewModel\r\n\t\t}\r\n\r\n\t\tfunction closePopup() {\r\n\t\t\treturn Q.fcall(function () {\r\n\t\t\t\tif (general.isDefinedType(DialogViewModel) && DialogViewModel.close) {\r\n\t\t\t\t\tDialogViewModel.close();\r\n\t\t\t\t}\r\n\t\t\t}).delay(10);\r\n\t\t}\r\n\r\n\t\tfunction startNewDeal(objInstrument, event) {\r\n\t\t\tif (!startNewDeal.enabled()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (objInstrument && objInstrument.id) {\r\n\t\t\t\tclosePopup()\r\n\t\t\t\t\t.then(function () {\r\n\t\t\t\t\t\tViewsManager.RedirectToURL(\r\n\t\t\t\t\t\t\tUrlResolver.combine(\r\n\t\t\t\t\t\t\t\tUrlResolver.getRedirectPath(),\r\n\t\t\t\t\t\t\t\t\"/NewDeal?instrumentId=\" + objInstrument.id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tdispose: dispose,\r\n\t\t\tData: data,\r\n\t\t\tClosePopup: closePopup,\r\n\t\t\tStartNewDeal: startNewDeal,\r\n\t\t};\r\n\t});\r\n\r\n\t// params contains all data from CashBackViewModel, it has been passed from component data binding\r\n\tfunction createViewModel(params) {\r\n\t\tvar viewModel = new CashBackViewModel(params || {});\r\n\t\tviewModel.init();\r\n\r\n\t\treturn viewModel;\r\n\t}\r\n\r\n\treturn {\r\n\t\tviewModel: {\r\n\t\t\tcreateViewModel: createViewModel,\r\n\t\t},\r\n\t};\r\n});\r\n",
  "isBase64": false
}