{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/devices/web/uilayer/managers/TileSettingsManager.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'devicemanagers/TileSettingsManager',\r\n    [\r\n        'require',\r\n        'managers/ChartSettingManager',\r\n        'handlers/general',\r\n    ],\r\n    function TileSettingsManager(require) {\r\n        var chartSettingManager = require('managers/ChartSettingManager'),\r\n            general = require('handlers/general');\r\n\r\n        function init(settings) {\r\n            settings = settings || {};\r\n            chartSettingManager.Chart().tileSettings = chartSettingManager.Chart().tileSettings || {};\r\n\r\n            if (!general.isDefinedType(chartSettingManager.Chart().tileSettings.activeTileId)) {\r\n                chartSettingManager.Chart().tileSettings.activeTileId = 0;\r\n            }\r\n\r\n            if (!general.isDefinedType(chartSettingManager.Chart().tileSettings.layoutId) ||\r\n                isPageFittingOtherLayout(settings, chartSettingManager.Chart())) {\r\n                chartSettingManager.Chart().tileSettings.layoutId = settings.initialLayout || eTileLayout.FourSplit;\r\n            }\r\n\r\n            chartSettingManager.SaveChart();\r\n        }\r\n\r\n        function isPageFittingOtherLayout(settings, chart) {\r\n            return !general.isNullOrUndefined(settings.initialLayout) &&\r\n                chart.tileSettings.layoutId !== settings.initialLayout &&\r\n                chart.tileSettings.layoutId !== eTileLayout.Single;\r\n        }\r\n\r\n        function getActiveTileId() {\r\n            return chartSettingManager.Chart().tileSettings.activeTileId;\r\n        }\r\n\r\n        function getLayout() {\r\n            return chartSettingManager.Chart().tileSettings.layoutId;\r\n        }\r\n\r\n        function updateLayout(layoutId) {\r\n            var settings = getSettings();\r\n\r\n            settings.layoutId = layoutId;\r\n\r\n            updateSettings(settings);\r\n        }\r\n\r\n        function updateActiveTileId(activeTileId) {\r\n            var settings = getSettings();\r\n\r\n            settings.activeTileId = activeTileId;\r\n\r\n            updateSettings(settings);\r\n        }\r\n\r\n        function getSettings() {\r\n            return chartSettingManager.Chart().tileSettings;\r\n        }\r\n\r\n        function updateSettings(tileSettings) {\r\n            chartSettingManager.Chart().tileSettings = general.extendType(chartSettingManager.Chart().tileSettings, tileSettings);\r\n            chartSettingManager.SaveChart();\r\n        }\r\n\r\n        return {\r\n            Init: init,\r\n            GetLayout: getLayout,\r\n            GetActiveTileId: getActiveTileId,\r\n            UpdateActiveTileId: updateActiveTileId,\r\n            UpdateLayout: updateLayout\r\n        };\r\n    }\r\n);\r\n",
  "isBase64": false
}