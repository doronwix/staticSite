{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/registration/ChangePasswordModule.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿(function (root, factory) {\r\n\t\"use strict\";\r\n\tif (typeof define === \"function\" && define.amd) {\r\n\t\tdefine(\"registration/ChangePasswordModule\", [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"Global/RevealPassword\",\r\n\t\t\t\"Registration/Common/CustomerValidators\",\r\n\t\t\t\"dataaccess/dalCommon\",\r\n\t\t\t\"devicehelpers/adjustUiPerDevice\",\r\n\t\t\t\"global/UrlResolver\",\r\n\t\t\t\"initdatamanagers/Customer\",\r\n\t\t], factory);\r\n\t} else {\r\n\t\troot.ChangePassword = factory(\r\n\t\t\troot.$,\r\n\t\t\troot.RevealPassword,\r\n\t\t\troot.CustomerValidators,\r\n\t\t\tnull,\r\n\t\t\troot.adjustUiPerDevice,\r\n\t\t\troot.UrlResolver,\r\n\t\t\troot.$customer\r\n\t\t);\r\n\t}\r\n})(typeof self !== \"undefined\" ? self : this, function (\r\n\t$,\r\n\tRevealPassword,\r\n\tCustomerValidators,\r\n\tdalCommon,\r\n\tadjustUiPerDevice,\r\n\turlResolver,\r\n\tcustomer\r\n) {\r\n\tvar eLoginLogoutReasonChangePassword = {\r\n\t\tchangePassword_NoToken: 7770108,\r\n\t};\r\n\tvar resultTypes = {\r\n\t\tNone: 0,\r\n\t\tSuccess: 1,\r\n\t\tChangeSuccess: 2,\r\n\t\tResetSuccess: 3,\r\n\t\tOldPasswordDoesNotMatch: 4,\r\n\t\tNewPasswordsDoNotMatch: 5,\r\n\t\tInvalidNewPassword: 6,\r\n\t\tPreviousPasswordRecurrence: 7,\r\n\t\tInternalError: 8,\r\n\t\tUserLockedOut: 9,\r\n\t\tUserNotFound: 10,\r\n\t\tMinDaysPassword: 11,\r\n\t\tTokenNotValid: 12,\r\n\t\tWeakPassword: 13,\r\n\t};\r\n\r\n\tvar customerValidators = new CustomerValidators();\r\n\r\n\tfunction init(avoidDoubleHandlers) {\r\n\t\taddCustomValidators();\r\n\r\n\t\tdecodeValidation();\r\n\r\n\t\tif (avoidDoubleHandlers) {\r\n\t\t\tunsetDomEvents();\r\n\t\t}\r\n\r\n\t\tunsetDomEvents();\r\n\t\tsetDomEvents();\r\n\t\tsetDomElements();\r\n\t}\r\n\r\n\tfunction addCustomValidators() {\r\n\t\tcustomerValidators.addValidationBlackList();\r\n\t\tcustomerValidators.addValidationCustomerFullName();\r\n\r\n\t\tjQuery.validator.unobtrusive.parse($(\"#ChangePasswordForm\"));\r\n\t}\r\n\r\n\tfunction decodeValidation() {\r\n\t\tvar validation = $(\".validation-summary-errors li\");\r\n\t\tvar text = validation.text();\r\n\t\tvalidation.html(text);\r\n\t}\r\n\r\n\tfunction setDomEvents() {\r\n\t\t$(\"#oldPassword\").on(\"keyup\", function (e) {\r\n\t\t\tif (e.target.value.length > 0) {\r\n\t\t\t\t$(\"#oldPasswordIcon\").addClass(\"ico-pass-blue\");\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#oldPasswordIcon\").removeClass(\"ico-wb-reveal-off\");\r\n\t\t\t\t$(\"#oldPasswordIcon\").removeClass(\"ico-pass-blue\");\r\n\t\t\t\t$(\"#oldPasswordIcon\").addClass(\"ico-wb-reveal\");\r\n\t\t\t\te.target.type = \"password\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(\"#oldPasswordIcon\").on(\"click\", function (e) {\r\n\t\t\tvar pass = document.getElementById(\"oldPassword\");\r\n\t\t\tif (pass.value.length > 0) {\r\n\t\t\t\tif (pass.type == \"password\") {\r\n\t\t\t\t\tpass.type = \"text\";\r\n\t\t\t\t\te.target.classList.add(\"ico-wb-reveal-off\");\r\n\t\t\t\t\te.target.classList.remove(\"ico-wb-reveal\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpass.type = \"password\";\r\n\t\t\t\t\te.target.classList.remove(\"ico-wb-reveal-off\");\r\n\t\t\t\t\te.target.classList.add(\"ico-wb-reveal\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(\"#newPassword\").on(\"keyup\", function (e) {\r\n\t\t\tif (e.target.value.length > 0) {\r\n\t\t\t\t$(\"#newPasswordIcon\").addClass(\"ico-pass-blue\");\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#newPasswordIcon\").removeClass(\"ico-wb-reveal-off\");\r\n\t\t\t\t$(\"#newPasswordIcon\").removeClass(\"ico-pass-blue\");\r\n\t\t\t\t$(\"#newPasswordIcon\").addClass(\"ico-wb-reveal\");\r\n\t\t\t\te.target.type = \"password\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(\"#newPasswordIcon\").on(\"click\", function (e) {\r\n\t\t\tvar pass = document.getElementById(\"newPassword\");\r\n\t\t\tif (pass.value.length > 0) {\r\n\t\t\t\tif (pass.type == \"password\") {\r\n\t\t\t\t\tpass.type = \"text\";\r\n\t\t\t\t\te.target.classList.add(\"ico-wb-reveal-off\");\r\n\t\t\t\t\te.target.classList.remove(\"ico-wb-reveal\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpass.type = \"password\";\r\n\t\t\t\t\te.target.classList.remove(\"ico-wb-reveal-off\");\r\n\t\t\t\t\te.target.classList.add(\"ico-wb-reveal\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(\"#confirmPassword\").on(\"keyup\", function (e) {\r\n\t\t\tif (e.target.value.length > 0) {\r\n\t\t\t\t$(\"#confirmPasswordIcon\").addClass(\"ico-pass-blue\");\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#confirmPasswordIcon\").removeClass(\"ico-wb-reveal-off\");\r\n\t\t\t\t$(\"#confirmPasswordIcon\").removeClass(\"ico-pass-blue\");\r\n\t\t\t\t$(\"#confirmPasswordIcon\").addClass(\"ico-wb-reveal\");\r\n\t\t\t\te.target.type = \"password\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(\"#confirmPasswordIcon\").on(\"click\", function (e) {\r\n\t\t\tvar pass = document.getElementById(\"confirmPassword\");\r\n\t\t\tif (pass.value.length > 0) {\r\n\t\t\t\tif (pass.type == \"password\") {\r\n\t\t\t\t\tpass.type = \"text\";\r\n\t\t\t\t\te.target.classList.add(\"ico-wb-reveal-off\");\r\n\t\t\t\t\te.target.classList.remove(\"ico-wb-reveal\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpass.type = \"password\";\r\n\t\t\t\t\te.target.classList.remove(\"ico-wb-reveal-off\");\r\n\t\t\t\t\te.target.classList.add(\"ico-wb-reveal\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$(\"#ChangePasswordForm\").on(\"change\", \"input\", function (e) {\r\n\t\t\tvar validator = $(\"#ChangePasswordForm\").validate(),\r\n\t\t\t\telement = e.srcElement || e.target;\r\n\t\t\tvalidator.element(element);\r\n\t\t\thighlightInvalids();\r\n\t\t});\r\n\r\n\t\t$(\"#ChangePasswordForm\").on(\"click.ChangePassword\", \"#changePasswordbtnOk\", {}, function (event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tresetView();\r\n\t\t\tpostChangePassword();\r\n\t\t});\r\n\r\n\t\t$(\"#ChangePasswordForm\").on(\"click.Postpone\", \"#changePasswordBtnPostpone\", {}, function () {\r\n\t\t\t$('#ChangePasswordForm').attr('action', 'RemindMeLater');\r\n\t\t\t$(\"#ChangePasswordForm\").validate().settings.ignore = \"*\";\r\n\t\t\t$('#ChangePasswordForm').submit();\r\n\t\t});\r\n\r\n\t\tif (adjustUiPerDevice) {\r\n\t\t\tadjustUiPerDevice(document.getElementById(\"oldPassword\"));\r\n\t\t\tadjustUiPerDevice(document.getElementById(\"newPassword\"));\r\n\t\t\tadjustUiPerDevice(document.getElementById(\"confirmPassword\"));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resetView() {\r\n\t\t//Old Password\r\n\t\tvar oldPass = document.getElementById(\"oldPassword\");\r\n\t\toldPass.type = \"password\";\r\n\t\t$(\"#oldPasswordIcon\").removeClass(\"ico-wb-reveal-off\");\r\n\t\t$(\"#oldPasswordIcon\").addClass(\"ico-wb-reveal\");\r\n\t\tif (oldPass.value.length == 0) {\r\n\t\t\t$(\"#oldPasswordIcon\").removeClass(\"ico-pass-blue\");\r\n\t\t}\r\n\t\t//New Password\r\n\t\tvar newPass = document.getElementById(\"newPassword\");\r\n\t\tnewPass.type = \"password\";\r\n\t\t$(\"#newPasswordIcon\").removeClass(\"ico-wb-reveal-off\");\r\n\t\t$(\"#newPasswordIcon\").addClass(\"ico-wb-reveal\");\r\n\t\tif (newPass.value.length == 0) {\r\n\t\t\t$(\"#newPasswordIcon\").removeClass(\"ico-pass-blue\");\r\n\t\t}\r\n\t\t//Confim Password\r\n\t\tvar confirmPass = document.getElementById(\"confirmPassword\");\r\n\t\tconfirmPass.type = \"password\";\r\n\t\t$(\"#confirmPasswordIcon\").removeClass(\"ico-wb-reveal-off\");\r\n\t\t$(\"#confirmPasswordIcon\").addClass(\"ico-wb-reveal\");\r\n\t\tif (confirmPass.value.length == 0) {\r\n\t\t\t$(\"#confirmPasswordIcon\").removeClass(\"ico-pass-blue\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setDomElements() {\r\n\t\t$(\"#changePasswordTemplate\").addClass(window.$viewModelsManager ? \"internal\" : \"\");\r\n\t}\r\n\r\n\tfunction unsetDomEvents() {\r\n\t\t$(\"#ChangePasswordForm\").off(\".ChangePassword\");\r\n\t}\r\n\tfunction deleteFingerprint(FingerprintTools, LastLoginMethod) {\r\n\t\tFingerprintTools.DeleteToken();\r\n\t\tLastLoginMethod.SetLastLoginMethod(eLoginMethods.Password);\r\n\t}\r\n\tfunction onSuccessfulPasswordChange(response) {\r\n\t\tif (window.Fingerprint && localStorage.getItem(\"fingerprintSupport\")) {\r\n\t\t\tif (typeof define === \"function\" && define.amd) {\r\n\t\t\t\trequire([\"FingerprintTools\", \"LastLoginMethod\"], deleteFingerprint);\r\n\t\t\t} else {\r\n\t\t\t\tdeleteFingerprint(window.FingerprintTools, window.LastLoginMethod);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (window.$viewModelsManager) {\r\n\t\t\tcustomer.prop.showSuggestionChangePassword = false;\r\n\t\t\tAlertsManager.UpdateAlert(\r\n\t\t\t\tAlertTypes.ServerResponseAlert,\r\n\t\t\t\tDictionary.GetItem(\"GenericAlert\", \"dialogsTitles\", \" \"),\r\n\t\t\t\tDictionary.GetItem(\"PasswordSuccess\"),\r\n\t\t\t\t\"\",\r\n\t\t\t\t{ redirectToView: customer.prop.mainPage }\r\n\t\t\t);\r\n\t\t\tAlertsManager.PopAlert(AlertTypes.ServerResponseAlert);\r\n\t\t} else {\r\n\t\t\tif (!response.returnUrl || response.returnUrl === \"\") {\r\n\t\t\t\twindow.location.href =\r\n\t\t\t\t\twindow.location.pathname.substring(0, window.location.pathname.indexOf(\"/\", 1)) +\r\n\t\t\t\t\tresponse.resultTranslation.replace(\"~\", \"\");\r\n\t\t\t} else {\r\n\t\t\t\twindow.location.href =\r\n\t\t\t\t\twindow.location.pathname.substring(0, window.location.pathname.indexOf(\"/\", 1)) +\r\n\t\t\t\t\tresponse.returnUrl.replace(\"~\", \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseServerValidationErrors(response) {\r\n\t\tswitch (response.result) {\r\n\t\t\tcase resultTypes.OldPasswordDoesNotMatch:\r\n\t\t\t\t$(\"#ChangePasswordForm\")\r\n\t\t\t\t\t.validate()\r\n\t\t\t\t\t.showErrors({ OldPassword: response.resultTranslation.join(\"<br />\") });\r\n\t\t\t\tbreak;\r\n\t\t\tcase resultTypes.PreviousPasswordRecurrence:\r\n\t\t\tcase resultTypes.WeakPassword:\r\n\t\t\t\t$(\"#ChangePasswordForm\")\r\n\t\t\t\t\t.validate()\r\n\t\t\t\t\t.showErrors({ NewPassword: response.resultTranslation.join(\"<br />\") });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t$(\"#divChangePasswordErrors\")\r\n\t\t\t\t\t.removeClass()\r\n\t\t\t\t\t.addClass(\"field-validation-error error-from-server\")\r\n\t\t\t\t\t.html(response.resultTranslation.join(\"<br />\"));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction postChangePassword() {\r\n\t\tvar form = $(\"#ChangePasswordForm\");\r\n\r\n\t\tif (window.$viewModelsManager) {\r\n\t\t\tform.find('input[name=\"IsExternalPage\"]').val(\"True\");\r\n\t\t}\r\n\r\n\t\tvar divErrors = $(\"#divChangePasswordErrors\");\r\n\t\tdivErrors.html(\"\").removeClass().addClass(\"field-validation-valid\");\r\n\r\n\t\tif (form.valid()) {\r\n\t\t\t$.post(\r\n\t\t\t\turlResolver.getUrlWithRndKeyValue(\"/webpl3/Account/SaveChangedPassword\"),\r\n\t\t\t\tform.serialize(),\r\n\t\t\t\tfunction (response) {\r\n\t\t\t\t\tresponse = JSON.parse(response);\r\n\t\t\t\t\tif (response.result === resultTypes.Success) {\r\n\t\t\t\t\t\tonSuccessfulPasswordChange(response);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (response.result === resultTypes.TokenNotValid) {\r\n\t\t\t\t\t\t\tif (dalCommon) dalCommon.Logout(eLoginLogoutReasonChangePassword.changePassword_NoToken);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\twindow.location.assign(\r\n\t\t\t\t\t\t\t\t\t\"logout?reason=\" + eLoginLogoutReasonChangePassword.changePassword_NoToken\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tparseServerValidationErrors(response);\r\n\t\t\t\t\t\t\thighlightInvalids();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\thighlightInvalids();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction highlightInvalids() {\r\n\t\tvar form = $(\"#ChangePasswordForm\"),\r\n\t\t\tvalidator = form.validate();\r\n\r\n\t\t$(\".input-holder\").removeClass(\"error\");\r\n\r\n\t\t$.each(validator.errorList, function (index, error) {\r\n\t\t\t$(error.element).parent().addClass(\"error\");\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tinit: init,\r\n\t\tunsetDomEvents: unsetDomEvents,\r\n\t};\r\n});\r\n",
  "isBase64": false
}