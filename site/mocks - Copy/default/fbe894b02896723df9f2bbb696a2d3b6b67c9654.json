{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/devices/web/uilayer/viewmodels/UploadDocuments/VerificationDocumentViewModel.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'deviceviewmodels/UploadDocuments/VerificationDocumentViewModel',\r\n    [\r\n        'require',\r\n        'handlers/general',\r\n        'viewmodels/dialogs/DialogViewModel',\r\n        'viewmodels/BaseVerificationDocumentViewModel',\r\n        'devicemanagers/AlertsManager',\r\n        'managers/viewsmanager'\r\n    ],\r\n    function (require) {\r\n        var DialogViewModel = require('viewmodels/dialogs/DialogViewModel'),\r\n            AlertsManager = require('devicemanagers/AlertsManager'),\r\n            ViewsManager = require('managers/viewsmanager'),\r\n            general = require('handlers/general'),\r\n            BaseVerificationDocumentViewModel = require('viewmodels/BaseVerificationDocumentViewModel');\r\n\r\n        var VerificationDocumentViewModel = general.extendClass(BaseVerificationDocumentViewModel, function (params) {\r\n            var self = this,\r\n                parent = this.parent, // inherited from BaseVerificationDocumentViewModel\r\n                data = this.Data, // inherited from BaseVerificationDocumentViewModel\r\n                verificationDoneMsg = \"done-document-type\" + params.documentTypeId;  \r\n\r\n            function init() {\r\n                parent.Init.call(self);\r\n\r\n                window.addEventListener(\"message\", function (event) {\r\n                    if (event.data.msg === verificationDoneMsg) {\r\n                        parent.SetStateDocStatusText(false);\r\n                        parent.SetStateConfirm(false);\r\n                        data.enableConfirm(false);\r\n\r\n                        DialogViewModel.close(eDialog.DocumentVerification, true);\r\n\r\n                        ViewsManager.SwitchViewVisible(eForms.UploadDocuments);\r\n\r\n                        AlertsManager.UpdateAlert(AlertTypes.GeneralOkAlert,\r\n                            Dictionary.GetItem(\"pleaseNoteTitle\"),\r\n                            parent.GetConfirmAlertMsg(),\r\n                            null, {});\r\n                        AlertsManager.PopAlert(AlertTypes.GeneralOkAlert);\r\n                    }\r\n                });\r\n            }\r\n\r\n            function onClick() {\r\n                parent.GetVerificationDocumentUrl(params.documentTypeId)\r\n                    .then(function (response) {\r\n                        if (!general.isNullOrUndefined(response) && !general.isEmptyValue(response.iframeUrl)) {\r\n                            openShuftyModal(response.iframeUrl);\r\n                        } else {\r\n                            parent.SetStateNormalUpload(true);\r\n                        }\r\n                    })\r\n                    .done();\r\n            }\r\n\r\n            function openShuftyModal(iframeUrl) {\r\n                var widthCoef = parseFloat((window.innerWidth / 1000).toFixed(2));\r\n                var heightCoef = parseFloat((window.innerHeight / 500).toFixed(2));\r\n                var modalWidth = parseFloat((window.innerWidth / widthCoef).toFixed(2));\r\n                var modalHeight = parseFloat((window.innerHeight / heightCoef).toFixed(2));\r\n\r\n                var options = {\r\n                    title: '',\r\n                    width: modalWidth,\r\n                    height: modalHeight,\r\n                    dialogClass: 'fx-dialog verification-document-dialog',\r\n                    modal: true,\r\n                    draggable: true,\r\n                    resizable: false,\r\n                    left: (window.innerWidth - modalWidth) / 2,\r\n                    top: 146,\r\n                    offset: modalWidth,\r\n                    useDialogPosition: true\r\n                };\r\n\r\n                var args = {\r\n                    iframeUrl: iframeUrl,\r\n                    iframeHeight: modalHeight\r\n                };\r\n\r\n                DialogViewModel.open(eDialog.DocumentVerification,\r\n                    options,\r\n                    eViewTypes.vDocumentVerificationModal,\r\n                    args);\r\n            }\r\n\r\n            return {\r\n                Init: init,\r\n                Data: data,\r\n                OnClick: onClick\r\n            };\r\n        });\r\n\r\n        var createViewModel = function (params) {\r\n            var viewModel = new VerificationDocumentViewModel(params);\r\n\r\n            viewModel.Init();\r\n\r\n            return viewModel;\r\n        };\r\n\r\n        return {\r\n            viewModel: {\r\n                createViewModel: createViewModel\r\n            }\r\n        };\r\n    }\r\n)",
  "isBase64": false
}