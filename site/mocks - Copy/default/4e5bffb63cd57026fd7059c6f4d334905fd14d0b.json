{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/uilayer/modules/ComponentStyle.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "define([\r\n        'global/UrlResolver',\r\n        'modules/ThemeSettings',\r\n        'handlers/general'\r\n    ],\r\n    function ComponentStyle() {\r\n        var UrlResolver = require('global/UrlResolver'),\r\n            ThemeSettings = require('modules/ThemeSettings'),\r\n            general = require('handlers/general'),\r\n            head = document.head || document.getElementsByTagName('head')[0],\r\n            // Eliminate browsers that admit to not support the link load event (e.g. Firefox < 9)\r\n            nativeLoad = document.createElement('link').onload === null ? null : false,\r\n            a = document.createElement('a');\r\n\r\n        function createLink(url) {\r\n            var link = document.createElement('link');\r\n\r\n            link.rel = \"stylesheet\";\r\n            link.type = \"text/css\";\r\n            link.href = url;\r\n\r\n            return link;\r\n        }\r\n\r\n        function styleSheetLoaded(url) {\r\n            var i;\r\n\r\n            a.href = url;\r\n\r\n            for (i in document.styleSheets) {\r\n                if (document.styleSheets[i].href === a.href) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Load using the browsers built-in load event on link tags\r\n         */\r\n        function loadLink(url, load) {\r\n            var link = createLink(url);\r\n\r\n            link.onload = function () {\r\n                load();\r\n            };\r\n\r\n            head.appendChild(link);\r\n        }\r\n\r\n        /**\r\n         * Insert a script tag and use it's onload & onerror to know when\r\n         * the CSS is loaded, this will unfortunately also fire on other\r\n         * errors (file not found, network problems)\r\n         */\r\n        function loadScript(url, load) {\r\n            var link = createLink(url),\r\n                script = document.createElement('script');\r\n\r\n            head.appendChild(link);\r\n\r\n            script.onload = script.onerror = function () {\r\n                head.removeChild(script);\r\n\r\n                // In Safari the stylesheet might not yet be applied, when\r\n                // the script is loaded so we poll document.styleSheets for it\r\n                var checkLoaded = function () {\r\n                    if (styleSheetLoaded(url)) {\r\n                        load();\r\n\r\n                        return;\r\n                    }\r\n\r\n                    setTimeout(checkLoaded, 25);\r\n                };\r\n                checkLoaded();\r\n            };\r\n            script.src = url;\r\n\r\n            head.appendChild(script);\r\n        }\r\n\r\n        function loadSwitch(url, load) {\r\n            if (nativeLoad) {\r\n                loadLink(url, load);\r\n            } else {\r\n                loadScript(url, load);\r\n            }\r\n        }\r\n\r\n        return {\r\n            load: function (name, req, onload) { //, config (not used)\r\n                var theme =  ThemeSettings.GetTheme(),\r\n                    resourceUrl = UrlResolver.getAssetsPath() + '/skins/' + UrlResolver.getApplicationType() +\r\n                        '/broker' + UrlResolver.getBroker() + '/' + UrlResolver.getLanguage() + '/components/' +\r\n                        name + '.' + theme + '.css';\r\n\r\n\t\t\t\tvar url = req.toUrl(resourceUrl);\r\n\r\n\t\t\t\t// Test if the browser supports the link load event,\r\n\t\t\t\t// in case we don't know yet (mostly WebKit)\r\n\t\t\t\tif (general.isNullOrUndefined(nativeLoad)) {\r\n\t\t\t\t\t// Create a link element with a data url,\r\n\t\t\t\t\t// it would fire a load event immediately\r\n\t\t\t\t\tvar link = createLink('data:text/css,');\r\n\r\n\t\t\t\t\tlink.onload = function () {\r\n\t\t\t\t\t\t// Native link load event works\r\n\t\t\t\t\t\tnativeLoad = true;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\thead.appendChild(link);\r\n\r\n\t\t\t\t\t// Schedule function in event loop, this will\r\n\t\t\t\t\t// execute after a potential execution of the link onload\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\thead.removeChild(link);\r\n\r\n\t\t\t\t\t\tif (nativeLoad !== true) {\r\n\t\t\t\t\t\t\t// Native link load event is broken\r\n\t\t\t\t\t\t\tnativeLoad = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tloadSwitch(url, onload);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tloadSwitch(url, onload);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        };\r\n    }\r\n);\r\n",
  "isBase64": false
}