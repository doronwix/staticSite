{
  "requestUrl": "/webpl3/assets/20201230110628/js/scripts/fxnet/dataaccesslayer/dalPouchDB.js?v=20201230110628",
  "contentType": "application/javascript",
  "method": "GET",
  "statusCode": 200,
  "data": "ï»¿define(\r\n    'dataaccess/dalPouchDB',\r\n    [\r\n        'require',\r\n        'Q',\r\n        'handlers/general',\r\n        'vendor/pouchdb.min',\r\n        'generalmanagers/ErrorManager',\r\n        'initdatamanagers/Customer',\r\n        'global/browser'\r\n    ],\r\n    function (require) {\r\n        var Q = require('Q'),\r\n            general = require('handlers/general'),\r\n            PouchDB = require(\"vendor/pouchdb.min\"),\r\n            errorManager = require('generalmanagers/ErrorManager'),\r\n            customer = require(\"initdatamanagers/Customer\"),\r\n            db,\r\n            dbprefix = \"db\",\r\n            initDefer = null;\r\n\r\n        function isDisabled() {\r\n            var _isDisabled = !window.indexedDB || (Browser.FullBrowserInfo.browser.name === \"Safari\" && Browser.FullBrowserInfo.browser.version < 10.00);\r\n            return _isDisabled;\r\n        }\r\n\r\n        function init() {\r\n            if (initDefer) {\r\n                return;\r\n            }\r\n\r\n            initDefer = Q.defer();\r\n\r\n            try {\r\n                db = new PouchDB(dbprefix + customer.prop.accountNumber, { revs_limit: 1 });\r\n                initDefer.resolve();\r\n            } catch (e) {\r\n                errorManager.onError(\"dalPouchDB\", \"exception general: \" + e.message, eErrorSeverity.low);\r\n                db = null;\r\n                initDefer.reject();\r\n            }\r\n        }\r\n\r\n        function get(docId) {\r\n            var dataReady = Q.defer();\r\n\r\n            if (isDisabled()) {\r\n                // sample from pouchdb error:{\"status\":404,\"name\":\"not_found\",\"message\":\"missing\",\"error\":true,\"reason\":\"missing\",\"docId\":\"chart\"}\"\r\n                dataReady.reject({ \"name\": \"pushdb-disabled\", \"message\": \"disabled\", \"reason\": \"disabled\" });\r\n            } else {\r\n                if (!db) {\r\n                    init();\r\n                }\r\n\r\n                initDefer.promise\r\n                    .then(function () {\r\n                        db.get(docId)\r\n                            .then(dataReady.resolve)\r\n                            .catch(dataReady.reject);\r\n                    });\r\n            }\r\n\r\n            return dataReady.promise;\r\n        }\r\n\r\n        function save(docId, doc) {\r\n            if (isDisabled() || !general.isObjectType(db)) {\r\n                return;\r\n            }\r\n\r\n            initDefer.promise\r\n                .then(function () {\r\n                    doc._id = docId;\r\n\r\n                    db.get(docId).then(function (existingChart) {\r\n                        doc._rev = existingChart._rev;\r\n                        db.put(doc).catch(function (error) {\r\n                            errorManager.onError(\"dalPouchDB/save- updating\", error.message, eErrorSeverity.low);\r\n                        });\r\n                    }).catch(function (error2) {\r\n                        if (error2.message === \"missing\") {\r\n                            db.put(doc).catch(function (error3) {\r\n                                errorManager.onError(\"dalPouchDB/save- inserting\", error3.message, eErrorSeverity.low);\r\n                            });\r\n                        }\r\n                    });\r\n                })\r\n                .catch(function () { });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!isDisabled()) {\r\n            setTimeout(init, 0);\r\n        }\r\n\r\n        return {\r\n            Get: get,\r\n            Save: save\r\n        };\r\n    }\r\n);",
  "isBase64": false
}